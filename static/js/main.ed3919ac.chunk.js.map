{"version":3,"sources":["services/localStorageService.js","contexts/AuthContextProvider.js","config/axios.js","contexts/ProfileContextProvider.js","contexts/CartContextProvider.js","component/layout/AvatarMenu.js","component/layout/Header.js","component/layout/Logo.js","component/layout/ProductContainer.js","component/layout/TextContent.js","pages/HomePage.js","component/product/ProductPictureSlider.js","component/ProductCard.js","pages/ProductPage.js","pages/DesignSystemPage.js","pages/LogInPage.js","pages/RegisterPage.js","component/cart/RemoveFromCartAlert.js","component/cart/CartContainer.js","component/sales/OrderAddress.js","component/cart/RemoveAllFromCartButton.js","pages/CartPage.js","pages/SingleProductPage.js","component/profile/UserOrder.js","component/profile/UserProfile.js","component/profile/UserSummary.js","pages/ProfilePage.js","component/order/OrderItem.js","pages/SingleOrderPage.js","pages/AdminCreateProduct.js","pages/AdminManageProduct.js","pages/AdminManageStock.js","pages/AdminManageOrder.js","pages/AdminEditProduct.js","pages/AdminManageSingleOrder.js","App.js","reportWebVitals.js","styles/theme.js","styles/Fonts.js","index.js"],"names":["tokenName","service","setToken","token","localStorage","setItem","getToken","getItem","clearToken","removeItem","AuthContext","createContext","AuthContextProvider","children","useState","localStorageService","startsWith","isAuthenticated","setIsAuthenticated","user","setUser","Provider","value","axios","defaults","baseURL","interceptors","request","use","config","headers","Authorization","err","Promise","reject","response","console","log","status","window","location","assign","ProfileContext","ProfileContextProvider","profile","setProfile","fetchProfile","a","get","res","data","useEffect","CartContext","CartContextProvider","cart","setCart","fetchCart","AvatarMenu","useContext","history","useHistory","name","firstName","lastName","src","path","onClick","push","_hover","boxShadow","cursor","border","_active","Header","mb","minW","w","p","bg","align","mx","rounded","userType","Logo","mw","ProductContainer","TextContent","m","minWidth","borderRadius","boxSizing","textAlign","fontSize","Question","color","mt","mr","CheckCircle","ArrowRight","Phone","HomePage","ProductPictureSlider","imgPath","position","alt","ProductCard","productId","description","price","cartQuantity","ProductImages","useForm","register","handleSubmit","selectedImg","setSelectedImg","handleAddToCart","id","newData","unitPrice","post","dir","overflow","h","top","left","opacity","pl","pr","length","ArrowLeft","right","px","py","justify","map","image","index","as","BsCircleFill","GiCircle","variant","my","fontWeight","noOfLines","onSubmit","min","type","ProductPage","products","setProducts","fetchProduct","productQuantity","product","i","quantity","maxW","gridGap","gridColumnGap","wrap","item","DesignSystemPage","boxSize","LogInPage","errors","formState","responseFacebook","accessToken","data_access_expiration_time","expiresIn","graphDomain","signedRequest","userID","email","url","picture","profilePicture","d","justfiy","flexDirection","required","placeholder","size","username","message","password","direction","borderBottom","appId","autoLoad","fields","callback","RegisterPage","setUsername","setPassword","setFirstName","setLastName","phoneNumber","setPhoneNumber","setEmail","textAddress","setTextAddress","address","setAddress","provinces","setProvinces","districts","setDistricts","subDistricts","setSubDistricts","isPasswordNotMatched","setIsPasswordNotMatched","fetchProvince","fetchDistrict","province","fetchSubDistrict","district","handleSubmitRegister","confirmPassword","show","setShow","show2","setShow2","onChange","e","target","colorScheme","newAddress","nameTh","subDistrict","postCode","filter","zipCode","RemoveFromCartAlert","React","isOpen","setIsOpen","onClose","cancelRef","useRef","handleRemoveFromCart","put","leastDestructiveRef","ref","ml","watch","updateCart","borderColor","pb","ratio","defaultValue","OrderAddress","_focus","RemoveAllFromCartButton","handleRemoveAllFromCart","delete","CartPage","isFetchAddress","setIsFetchAddress","total","handleConfirmOrder","cartItemId","orderId","Product","CartContainer","SingleProductPage","UserOrder","orders","createdAt","slice","TransactionItems","reduce","acc","transactionItem","UserProfile","UserSummary","validOrder","order","TransactionItem","ProfilePage","setOrders","fetchOrder","handleChangePicture","formData","FormData","append","files","newProfile","imagePath","handleDeletePicture","textDecor","textShadow","hidden","OrderItem","SingleOrderPage","params","useParams","setOrder","file","setFile","isError","setIsError","handleCancelOrder","handleAddSlip","preventDefault","surName","AdminCreateProduct","handleCreateProduct","code","categoryId","handleCreateCategory","categoryCode","categoryName","fetchCategory","categories","setCategories","isRequired","alignContent","category","width","AdminManageProduct","totalPage","setTotalPage","selectedPage","setSelectedPage","newTotalPage","fetchProducts","handleSearchChange","isNumeric","Transaction","avgCost","page","AdminManageStock","AdminManageOrder","setStatus","customerName","setCustomerName","setPage","Math","ceil","fetchOrders","isCurrentPage","href","date","User","AdminEditProduct","setProduct","setCode","setName","setDescription","setPrice","setCategory","Category","handleEditProduct","find","handleDeleteImage","handleUpload","BsTrash","AdminManageSingleOrder","handleChangeStatus","slipPath","App","adminRoute","component","privateRoute","publicRoute","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","styles","global","padding","margin","colors","primary","200","100","orangeMain","blueMain","muted","300","fonts","heading","body","Fonts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed3919ac.chunk.js","sourcesContent":["const tokenName = 'token'\r\nconst setToken = (token) => localStorage.setItem(tokenName, token)\r\nconst getToken = () => localStorage.getItem(tokenName)\r\nconst clearToken = () => localStorage.removeItem(tokenName)\r\n\r\nconst service = { setToken, getToken, clearToken }\r\n\r\nexport default service\r\n","import { createContext, useState } from 'react'\r\nimport localStorageService from '../services/localStorageService'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    localStorageService.getToken() &&\r\n      !localStorageService.getToken().startsWith('{')\r\n  )\r\n  const [user, setUser] = useState({})\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        setIsAuthenticated,\r\n        user,\r\n        setUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import axios from 'axios'\r\nimport localStorageService from '../services/localStorageService'\r\n\r\naxios.defaults.baseURL = 'http://103.74.253.112:8000'\r\n// axios.defaults.baseURL = 'http://localhost:8000'\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    if (\r\n      localStorageService.getToken() &&\r\n      localStorageService.getToken().startsWith('{')\r\n    )\r\n      config.headers.Authorization = localStorageService.getToken()\r\n    if (\r\n      localStorageService.getToken() &&\r\n      !localStorageService.getToken().startsWith('{')\r\n    )\r\n      config.headers.Authorization = `Bearer ${localStorageService.getToken()}`\r\n    return config\r\n  },\r\n  (err) => Promise.reject(err)\r\n)\r\n\r\naxios.interceptors.response.use(\r\n  (response) => response,\r\n  (err) => {\r\n    console.log(err)\r\n    if (err.response.status === 401) {\r\n      localStorageService.clearToken()\r\n      window.location.assign('/')\r\n      return\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default axios\r\n","import axios from '../config/axios'\r\nimport { createContext, useEffect, useState } from 'react'\r\nimport localStorageService from '../services/localStorageService'\r\n\r\nexport const ProfileContext = createContext()\r\n\r\nfunction ProfileContextProvider({ children }) {\r\n  const [profile, setProfile] = useState({})\r\n  const fetchProfile = async () => {\r\n    const res = await axios.get('/user/me')\r\n    setProfile(res.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorageService.getToken() &&\r\n      !localStorageService.getToken().startsWith('{')\r\n    ) {\r\n      fetchProfile()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ profile, setProfile, fetchProfile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  )\r\n}\r\nexport default ProfileContextProvider\r\n","import axios from '../config/axios'\r\nimport { createContext, useEffect, useState } from 'react'\r\nimport localStorageService from '../services/localStorageService'\r\n\r\nexport const CartContext = createContext()\r\n\r\nfunction CartContextProvider({ children }) {\r\n  const [cart, setCart] = useState([])\r\n  const fetchCart = async () => {\r\n    try {\r\n      if (\r\n        localStorageService.getToken() &&\r\n        !localStorageService.getToken().startsWith('{')\r\n      ) {\r\n        const res = await axios.get('/cart/user')\r\n        setCart(res.data.cart)\r\n      }\r\n      if (\r\n        !localStorageService.getToken() ||\r\n        localStorageService.getToken().startsWith('{')\r\n      ) {\r\n        const res = await axios.get('/cart')\r\n        setCart(res.data.cart)\r\n        localStorageService.setToken(res.data.token)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchCart()\r\n  }, [])\r\n  return (\r\n    <CartContext.Provider value={{ cart, setCart, fetchCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartContextProvider\r\n","import { Avatar } from '@chakra-ui/avatar'\r\nimport { Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/menu'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { AuthContext } from '../../contexts/AuthContextProvider'\r\nimport { CartContext } from '../../contexts/CartContextProvider'\r\nimport { ProfileContext } from '../../contexts/ProfileContextProvider'\r\nimport localStorageService from '../../services/localStorageService'\r\n\r\nfunction AvatarMenu(children) {\r\n  const { setIsAuthenticated } = useContext(AuthContext)\r\n  const { profile, setProfile } = useContext(ProfileContext)\r\n  const { setCart, fetchCart } = useContext(CartContext)\r\n  const history = useHistory()\r\n  const handleLogout = () => {\r\n    localStorageService.clearToken()\r\n    setIsAuthenticated(false)\r\n    setCart([])\r\n    setProfile(false)\r\n    fetchCart()\r\n  }\r\n  return (\r\n    <Menu>\r\n      <MenuButton>\r\n        {/* Actions */}\r\n        <Avatar\r\n          name={`${profile.firstName} ${profile.lastName}`}\r\n          src={profile.path}\r\n          onClick={() => history.push('/profile')}\r\n          _hover={{\r\n            boxShadow: 'md',\r\n            cursor: 'pointer',\r\n            border: '1px'\r\n          }}\r\n          _active={{ boxShadow: 'lg' }}\r\n        />\r\n      </MenuButton>\r\n      <MenuList>\r\n        <MenuItem onClick={() => history.push('/profile')}>\r\n          View Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n      </MenuList>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default AvatarMenu\r\n","import {\r\n  Center,\r\n  Flex,\r\n  Spacer,\r\n  Text,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem\r\n} from '@chakra-ui/react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../contexts/AuthContextProvider'\r\nimport { ProfileContext } from '../../contexts/ProfileContextProvider'\r\nimport AvatarMenu from './AvatarMenu'\r\n\r\nfunction Header() {\r\n  const history = useHistory()\r\n  const { isAuthenticated } = useContext(AuthContext)\r\n  const { profile } = useContext(ProfileContext)\r\n  // const [isHover, setIsHover] = useState(false)\r\n  return (\r\n    <Center>\r\n      <Flex\r\n        // m={[2, 3]}\r\n        mb={3}\r\n        minW=\"350px\"\r\n        w=\"full\"\r\n        p=\"3\"\r\n        bg=\"orange.100\"\r\n        // border=\"2px solid darkblue\"\r\n        // borderRadius=\"xl\"\r\n        align=\"flex-end\"\r\n      >\r\n        <Text\r\n          mx=\"2\"\r\n          p=\"1\"\r\n          onClick={() => history.push('/')}\r\n          _hover={{\r\n            boxShadow: 'md',\r\n            cursor: 'pointer',\r\n            border: '1px',\r\n            rounded: 'xl'\r\n          }}\r\n          _active={{ boxShadow: 'lg' }}\r\n        >\r\n          Home\r\n        </Text>\r\n        <Text\r\n          mx=\"2\"\r\n          p=\"1\"\r\n          onClick={() => history.push('/product')}\r\n          _hover={{\r\n            boxShadow: 'md',\r\n            cursor: 'pointer',\r\n            border: '1px',\r\n            rounded: 'xl'\r\n          }}\r\n          _active={{ boxShadow: 'lg' }}\r\n        >\r\n          Products\r\n        </Text>\r\n        <Text\r\n          mx=\"2\"\r\n          p=\"1\"\r\n          onClick={() => history.push('/cart')}\r\n          _hover={{\r\n            boxShadow: 'md',\r\n            cursor: 'pointer',\r\n            border: '1px',\r\n            rounded: 'xl'\r\n          }}\r\n          _active={{ boxShadow: 'lg' }}\r\n        >\r\n          Cart\r\n        </Text>\r\n        {profile.userType === 'ADMIN' && (\r\n          <Menu>\r\n            <MenuButton>\r\n              <Text\r\n                mx=\"2\"\r\n                p=\"1\"\r\n                onClick={() => history.push('/admin')}\r\n                _hover={{\r\n                  boxShadow: 'md',\r\n                  cursor: 'pointer',\r\n                  border: '1px',\r\n                  rounded: 'xl'\r\n                }}\r\n                _active={{ boxShadow: 'lg' }}\r\n              >\r\n                Admin\r\n              </Text>\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem onClick={() => history.push('/admin/create/product')}>\r\n                Create Product\r\n              </MenuItem>\r\n              <MenuItem onClick={() => history.push('/admin/manage/product')}>\r\n                Manage Product\r\n              </MenuItem>\r\n              {/* <MenuItem onClick={() => history.push('/admin/manage/stock')}>\r\n                Manage Stock\r\n              </MenuItem> */}\r\n              <MenuItem onClick={() => history.push('/admin/manage/order')}>\r\n                Manage Order\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        )}\r\n        <Spacer />\r\n        {!isAuthenticated && (\r\n          <Text\r\n            mx=\"2\"\r\n            p=\"1\"\r\n            onClick={() => history.push('/login')}\r\n            _hover={{\r\n              boxShadow: 'md',\r\n              cursor: 'pointer',\r\n              border: '1px',\r\n              rounded: 'xl'\r\n            }}\r\n            _active={{ boxShadow: 'lg' }}\r\n          >\r\n            Log-in\r\n          </Text>\r\n        )}\r\n        {isAuthenticated && <AvatarMenu />}\r\n      </Flex>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { Center, Image } from '@chakra-ui/react'\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Center mx=\"2\" mw=\"350px\">\r\n      <Image src=\"./img/Slide1.JPG\" mx=\"2\" mw=\"350px\" />\r\n    </Center>\r\n  )\r\n}\r\nexport default Logo\r\n","import {\r\n  Center,\r\n  Heading,\r\n  Container,\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Spacer,\r\n  Flex,\r\n  Box,\r\n  Input\r\n} from '@chakra-ui/react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction ProductContainer() {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Center>\r\n      <Box w=\"750px\" m=\"2\">\r\n        <Heading mx=\"10px\" my=\"10px\">\r\n          รายการสินค้า\r\n        </Heading>\r\n        <Container\r\n          border=\"1px solid black\"\r\n          maxW=\"container.md\"\r\n          mx=\"0\"\r\n          p=\"3\"\r\n          borderRadius=\"xl\"\r\n        >\r\n          <Flex align=\"center\" m=\"1\">\r\n            <AspectRatio minW=\"50px\" w=\"150px\" ratio={1}>\r\n              <Image boxSize=\"100px\"></Image>\r\n            </AspectRatio>\r\n            <Text mx=\"2\">Item1 Lorem, ipsum dolor.</Text>\r\n            <Spacer />\r\n            <Flex direction=\"column\" align=\"center\">\r\n              <Text mb=\"2\">150.-</Text>\r\n              <Input size=\"xs\" width=\"30px\" />\r\n              <Flex mt=\"2\">\r\n                <Text mx=\"1\">- </Text> <Text mx=\"1\"> +</Text>\r\n              </Flex>\r\n              <Text>Add to Cart</Text>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex direction=\"row-reverse\">\r\n            <Text\r\n              onClick={() => history.push('/product')}\r\n              _hover={{\r\n                boxShadow: 'lg',\r\n                cursor: 'pointer',\r\n                rounded: 'xl'\r\n              }}\r\n            >\r\n              ดูสินค้าทั้งหมด\r\n            </Text>\r\n          </Flex>\r\n        </Container>\r\n      </Box>\r\n    </Center>\r\n  )\r\n}\r\nexport default ProductContainer\r\n","import {\r\n  ArrowRightIcon,\r\n  CheckCircleIcon,\r\n  CheckIcon,\r\n  PhoneIcon,\r\n  QuestionIcon\r\n} from '@chakra-ui/icons'\r\nimport { Center, Box, Text, Flex } from '@chakra-ui/react'\r\n\r\nfunction TextContent() {\r\n  return (\r\n    <Center m=\"2\">\r\n      <Box\r\n        // h=\"200px\"\r\n        minWidth=\"350px\"\r\n        w=\"750px\"\r\n        // mw=\"350px\"\r\n        p=\"4\"\r\n        // border=\"1px black solid\"\r\n        // bg=\"white\"\r\n        borderRadius=\"xl\"\r\n        boxSizing=\"border-box\"\r\n        textAlign=\"center\"\r\n        fontSize=\"md\"\r\n      >\r\n        <Flex>\r\n          <QuestionIcon color=\"red.400\" mt={1} mr={2} />\r\n          <Text>เปลี่ยนน้ำมันเครื่องทำไม่ต้องนำรถเข้าศูนย์</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <CheckCircleIcon color=\"green.400\" mt={1} mr={2} />\r\n          <Text>เพียงมีกรองและน้ำมันเครื่องก็สามารถทำเองได้</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <QuestionIcon color=\"red.400\" mt={1} mr={2} />\r\n          <Text>รถเสียแต่ไม่รู้ราคาอะไหล่ ไม่รู้จะโดนโก่งราคาไหม</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <CheckCircleIcon color=\"green.400\" mt={1} mr={2} />\r\n          <Text>\r\n            สามารถเช็คราคาและสั่งซื้อจากทางร้านเรา\r\n            ซึ่งขายอะไหล่ที่มีคุณภาพในราคายุติธรรม\r\n          </Text>\r\n        </Flex>\r\n        <Flex>\r\n          <ArrowRightIcon color=\"gray.400\" mt={1} mr={2} />\r\n          <Text>ร้าน จ.สุพรรณบุรีอะไหล่</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <ArrowRightIcon color=\"gray.400\" mt={1} mr={2} />\r\n          <Text>จำหน่ายอะไหล่รถยนต์ทุกชนิด</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <ArrowRightIcon color=\"gray.400\" mt={1} mr={2} />\r\n          <Text>อะไหล่เครื่อง 6D 31T</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <PhoneIcon color=\"green.400\" mt={1} mr={2} />\r\n          <Text>บริการสั่งอะไหล่ด่วน โทร 035503351 035503316</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <PhoneIcon color=\"green.400\" mt={1} mr={2} />\r\n          <Text>0882923774 Fax. 035523670</Text>\r\n        </Flex>\r\n      </Box>\r\n    </Center>\r\n  )\r\n}\r\nexport default TextContent\r\n","import { Box } from '@chakra-ui/react'\r\nimport Header from '../component/layout/Header'\r\nimport Logo from '../component/layout/Logo'\r\nimport ProductContainer from '../component/layout/ProductContainer'\r\nimport TextContent from '../component/layout/TextContent'\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Logo />\r\n      <TextContent />\r\n      {/* <ProductContainer /> */}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import { Box, Img } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nfunction ProductPictureSlider({ imgPath }) {\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Img src={imgPath} alt=\"productPicture\" />\r\n\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top=\"50%\"\r\n        left=\"0\"\r\n        bg=\"gray.200\"\r\n        opacity=\"50%\"\r\n        pl={1}\r\n        pr={3}\r\n        _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\r\n      >\r\n        <ArrowLeftIcon />\r\n      </Box>\r\n      <Box\r\n        position=\"absolute\"\r\n        top=\"50%\"\r\n        right=\"0\"\r\n        bg=\"gray.200\"\r\n        opacity=\"50%\"\r\n        pl={3}\r\n        pr={1}\r\n        _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\r\n      >\r\n        <ArrowRightIcon />\r\n      </Box> */}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ProductPictureSlider\r\n","import { useContext, useState } from 'react'\nimport {\n  Badge,\n  Box,\n  Center,\n  Flex,\n  Image,\n  Text,\n  Button,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Icon\n} from '@chakra-ui/react'\nimport { useForm } from 'react-hook-form'\nimport axios from '../config/axios'\nimport { CartContext } from '../contexts/CartContextProvider'\nimport { ProfileContext } from '../contexts/ProfileContextProvider'\nimport ProductPictureSlider from './product/ProductPictureSlider'\nimport { ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons'\nimport { GiCircle } from 'react-icons/gi'\nimport { BsCircleFill } from 'react-icons/bs'\n\nconst ProductCard = ({\n  productId,\n  name,\n  description,\n  price,\n  imgPath,\n  cartQuantity,\n  ProductImages\n}) => {\n  const { register, handleSubmit } = useForm()\n  const { fetchCart, cart, setCart } = useContext(CartContext)\n  const { profile } = useContext(ProfileContext)\n  const [selectedImg, setSelectedImg] = useState(0)\n  const handleAddToCart = async (data) => {\n    try {\n      if (!profile.id) {\n        const newData = { ...data, productId, unitPrice: price }\n        console.log(newData)\n        const res = await axios.post('/cart', newData)\n        // localStorageService.setToken(res.data.token)\n        setCart(res.data.cart)\n      } else {\n        const newData = { ...data, productId }\n        await axios.post('/cart/user', newData)\n        fetchCart()\n      }\n    } catch (err) {\n      console.dir(err)\n    }\n  }\n\n  const handleNextSlider = () => {\n    if (selectedImg === ProductImages.length - 1) setSelectedImg(0)\n    else setSelectedImg(selectedImg + 1)\n  }\n  const handleBackSlider = () => {\n    if (selectedImg === 0) setSelectedImg(ProductImages.length - 1)\n    else setSelectedImg(selectedImg - 1)\n  }\n\n  return (\n    <div>\n      <Box w=\"300px\" rounded=\"20px\" overflow=\"hidden\" bg=\"muted.300\">\n        <Center w=\"300px\" h=\"150px\" overflow=\"hidden\" position=\"relative\">\n          <Box>\n            <ProductPictureSlider\n              imgPath={\n                ProductImages &&\n                ProductImages[selectedImg] &&\n                ProductImages[selectedImg].imgPath\n              }\n            />\n            <Box\n              position=\"absolute\"\n              top=\"50%\"\n              left=\"0\"\n              bg=\"gray.200\"\n              opacity=\"50%\"\n              pl={1}\n              pr={3}\n              _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\n              // onClick={() => setSelectedImg(selectedImg - 1)}\n              onClick={handleBackSlider}\n            >\n              <ArrowLeftIcon />\n            </Box>\n            <Box\n              position=\"absolute\"\n              top=\"50%\"\n              right=\"0\"\n              bg=\"gray.200\"\n              opacity=\"50%\"\n              pl={3}\n              pr={1}\n              _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\n              // onClick={() => setSelectedImg(selectedImg + 1)}\n              onClick={handleNextSlider}\n            >\n              <ArrowRightIcon />\n            </Box>\n          </Box>\n          {/* <Image src={imgPath} alt=\"product\" /> */}\n        </Center>\n        <Box px={5} py={2}>\n          <Flex justify=\"center\">\n            {ProductImages.map((image, index) =>\n              selectedImg === index ? (\n                <Icon as={BsCircleFill} key={index} mx={0.5} />\n              ) : (\n                <Icon\n                  as={GiCircle}\n                  key={index}\n                  mx={0.5}\n                  _hover={{ cursor: 'pointer' }}\n                  onClick={() => setSelectedImg(index)}\n                />\n              )\n            )}\n          </Flex>\n          <Flex align=\"baseline\">\n            <Badge\n              variant=\"solid\"\n              bg=\"orangeMain.200\"\n              rounded=\"full\"\n              px=\"2\"\n              my={2}\n              fontWeight=\"normal\"\n            >\n              {/* Promotion */}\n              จำนวนในรถเข็น {cartQuantity}\n            </Badge>\n            {/* <Text ml={2} fontSize=\"sm\">\n              จำนวนในรถเข็น {cartQuantity}\n            </Text> */}\n          </Flex>\n          <Box>\n            <Text fontSize=\"sm\">{name}</Text>\n            <Text fontSize=\"sm\" noOfLines={[1, 2]}>\n              {description}\n            </Text>\n            <Text fontSize=\"sm\">ราคา {price}.-</Text>\n          </Box>\n          <form onSubmit={handleSubmit(handleAddToCart)}>\n            <Flex justify=\"flex-end\">\n              <NumberInput min={0} mx={2}>\n                <NumberInputField {...register('quantity')} bg=\"muted.100\" />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n              <Button\n                type=\"submit\"\n                fontSize=\"sm\"\n                bg=\"blueMain.100\"\n                _hover={{ boxShadow: 'md' }}\n                _active={{ boxShadow: 'lg', bg: 'blueMain.200' }}\n              >\n                เพิ่มไปยังรถเข็น\n              </Button>\n            </Flex>\n          </form>\n        </Box>\n      </Box>\n      {/*<Wrap*/}\n      {/*  w=\"150px\"*/}\n      {/*  h=\"230px\"*/}\n      {/*  border=\"1px solid black\"*/}\n      {/*  direction=\"column\"*/}\n      {/*  align=\"center\"*/}\n      {/*>*/}\n      {/*  <Image boxSize=\"150px\" src={'./img/Slide1.JPG'} />*/}\n      {/*  <Text m=\"0px\">Item1</Text>*/}\n      {/*</Wrap>*/}\n    </div>\n  )\n}\n\nexport default ProductCard\n","import Header from '../component/layout/Header'\r\nimport ProductCard from '../component/ProductCard'\r\nimport { Box, Container, Flex, Heading } from '@chakra-ui/react'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport axios from '../config/axios'\r\nimport { CartContext } from '../contexts/CartContextProvider'\r\n\r\nfunction ProductPage() {\r\n  const { cart } = useContext(CartContext)\r\n\r\n  const [products, setProducts] = useState([])\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      try {\r\n        const res = await axios.get('/product')\r\n        setProducts(res.data.products)\r\n      } catch (err) {\r\n        console.dir(err)\r\n      }\r\n    }\r\n    fetchProduct()\r\n  }, [])\r\n  const productQuantity = products.map((product, index) => {\r\n    for (let i = 0; i <= cart.length; i++) {\r\n      if (i === cart.length) return { ...product, cartQuantity: 0 }\r\n      if (product.id === cart[i].productId)\r\n        return { ...product, cartQuantity: cart[i].quantity }\r\n    }\r\n  })\r\n  console.log(cart)\r\n  console.log(productQuantity)\r\n  return (\r\n    <Box bg=\"gray.50\">\r\n      <Header />\r\n      {/*<ProductContainer />*/}\r\n      <Container maxW={'container.md'}>\r\n        <Heading mb={5}>รายการสินค้า</Heading>\r\n        <Container maxW={'container.md'}>\r\n          <Flex gridGap={5} gridColumnGap={10} justify=\"center\" wrap=\"wrap\">\r\n            {productQuantity.map((item, index) => (\r\n              <ProductCard\r\n                key={item.id}\r\n                productId={item.id}\r\n                name={item.name}\r\n                description={item.description}\r\n                price={item.price}\r\n                imgPath={item.imgPath}\r\n                cartQuantity={+item.cartQuantity}\r\n                ProductImages={item.ProductImages}\r\n              />\r\n            ))}\r\n          </Flex>\r\n        </Container>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\nexport default ProductPage\r\n","import { Box, Center, Stack, Wrap, Text } from '@chakra-ui/react'\r\n\r\nfunction DesignSystemPage() {\r\n  return (\r\n    <Center p={5}>\r\n      <Wrap gridGap={8} justify=\"center\">\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"primary.100\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>primary.100</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"primary.200\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>primary.200</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"orangeMain.100\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>orangeMain.100</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"orangeMain.200\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>orangeMain.200</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"blueMain.100\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>blueMain.100</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box bg=\"blueMain.200\" p={5} boxSize=\"150px\" rounded=\"20px\"></Box>\r\n          <Text>blueMain.200</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box\r\n            bg=\"muted.100\"\r\n            p={5}\r\n            boxSize=\"150px\"\r\n            border=\"solid 1px\"\r\n            rounded=\"20px\"\r\n          ></Box>\r\n          <Text>muted.100</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box\r\n            bg=\"muted.200\"\r\n            p={5}\r\n            boxSize=\"150px\"\r\n            border=\"solid 1px\"\r\n            rounded=\"20px\"\r\n          ></Box>\r\n          <Text>muted.200</Text>\r\n        </Stack>\r\n        <Stack textAlign=\"center\">\r\n          <Box\r\n            bg=\"muted.300\"\r\n            p={5}\r\n            boxSize=\"150px\"\r\n            border=\"solid 1px\"\r\n            rounded=\"20px\"\r\n          ></Box>\r\n          <Text>muted.300</Text>\r\n        </Stack>\r\n      </Wrap>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default DesignSystemPage\r\n","import { useForm } from 'react-hook-form'\r\nimport { Button } from '@chakra-ui/button'\r\nimport { Input } from '@chakra-ui/input'\r\nimport { Box, Center, Flex, Text, Wrap } from '@chakra-ui/layout'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Header from '../component/layout/Header'\r\nimport localStorageService from '../services/localStorageService'\r\nimport axios from '../config/axios'\r\nimport { AuthContext } from '../contexts/AuthContextProvider'\r\nimport { CartContext } from '../contexts/CartContextProvider'\r\nimport { ProfileContext } from '../contexts/ProfileContextProvider'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\nfunction LogInPage() {\r\n  const history = useHistory()\r\n  const { setIsAuthenticated } = useContext(AuthContext)\r\n  const { fetchProfile } = useContext(ProfileContext)\r\n  const { fetchCart } = useContext(CartContext)\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors }\r\n  } = useForm()\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const res = await axios.post('/login', data)\r\n      localStorageService.setToken(res.data.token)\r\n      setIsAuthenticated(true)\r\n      fetchProfile()\r\n      fetchCart()\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.dir(err)\r\n    }\r\n  }\r\n\r\n  const responseFacebook = async (response) => {\r\n    try {\r\n      // response.preventDefault()\r\n      console.log(response)\r\n      const {\r\n        accessToken,\r\n        data_access_expiration_time,\r\n        expiresIn,\r\n        graphDomain,\r\n        id,\r\n        name,\r\n        signedRequest,\r\n        userID,\r\n        email,\r\n        picture: { data: url }\r\n      } = response\r\n      const res = await axios.post('/login/facebook', {\r\n        accessToken,\r\n        data_access_expiration_time,\r\n        expiresIn,\r\n        graphDomain,\r\n        id,\r\n        name,\r\n        signedRequest,\r\n        userID,\r\n        email,\r\n        profilePicture: url\r\n      })\r\n      console.log(res.data.token)\r\n      localStorageService.setToken(res.data.token)\r\n      setIsAuthenticated(true)\r\n      fetchProfile()\r\n      fetchCart()\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.dir(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Wrap justify=\"center\" m={8}>\r\n        <Box\r\n          w=\"400px\"\r\n          p={8}\r\n          //   border=\"solid\"\r\n          d=\"flex\"\r\n          justfiy=\"center\"\r\n          flexDirection=\"column\"\r\n          bg=\"orange.100\"\r\n          rounded=\"20px\"\r\n        >\r\n          <Text\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize=\"lg\"\r\n            color=\"blueMain.200\"\r\n            mb={3}\r\n          >\r\n            Log-in\r\n          </Text>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input\r\n              {...register('username', { required: 'username is required' })}\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n            />\r\n            {errors.username && (\r\n              <Text color=\"red\" fontSize=\"sm\" px=\"3\">\r\n                {errors.username.message}\r\n              </Text>\r\n            )}\r\n            <Input\r\n              {...register('password', { required: 'password is required' })}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              my={2}\r\n            />\r\n            {errors.password && (\r\n              <Text color=\"red\" fontSize=\"sm\" px=\"3\">\r\n                {errors.password.message}\r\n              </Text>\r\n            )}\r\n            <Flex align=\"center\" direction=\"column\">\r\n              <Button type=\"submit\" bg=\"blueMain.100\" mt={3}>\r\n                Log in\r\n              </Button>\r\n              {/* <Text as=\"u\">forget-password</Text> */}\r\n              <Center w=\"300px\" borderBottom=\"1px solid gray\" mt=\"3\"></Center>\r\n              <Text\r\n                as=\"u\"\r\n                onClick={() => history.push('/register')}\r\n                _hover={{\r\n                  boxShadow: 'md',\r\n                  cursor: 'pointer'\r\n                }}\r\n                _active={{ boxShadow: 'lg' }}\r\n              >\r\n                register\r\n              </Text>\r\n              <FacebookLogin\r\n                appId=\"294840218738815\"\r\n                autoLoad={true}\r\n                fields=\"name,email,picture\"\r\n                callback={responseFacebook}\r\n                // render={(renderProps) => (\r\n                //   <button onClick={renderProps.onClick}>\r\n                //     This is my custom FB button\r\n                //   </button>\r\n                // )}\r\n              />\r\n            </Flex>\r\n          </form>\r\n        </Box>\r\n      </Wrap>\r\n    </Box>\r\n  )\r\n}\r\nexport default LogInPage\r\n","import { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport { Box, Wrap, Text, Flex } from '@chakra-ui/layout'\r\nimport Header from '../component/layout/Header'\r\nimport { Button } from '@chakra-ui/button'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { Select } from '@chakra-ui/select'\r\nimport axios from '../config/axios'\r\nimport { useHistory } from 'react-router'\r\nimport { AuthContext } from '../contexts/AuthContextProvider'\r\nimport localStorageService from '../services/localStorageService'\r\nimport { ProfileContext } from '../contexts/ProfileContextProvider'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nfunction RegisterPage() {\r\n  const history = useHistory()\r\n  const { register, handleSubmit } = useForm()\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [phoneNumber, setPhoneNumber] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [textAddress, setTextAddress] = useState('')\r\n  const [address, setAddress] = useState({})\r\n  const [provinces, setProvinces] = useState([])\r\n  const [districts, setDistricts] = useState([])\r\n  const [subDistricts, setSubDistricts] = useState([])\r\n  const [isPasswordNotMatched, setIsPasswordNotMatched] = useState(false)\r\n\r\n  const { setIsAuthenticated } = useContext(AuthContext)\r\n  const { fetchProfile } = useContext(ProfileContext)\r\n\r\n  const fetchProvince = async () => {\r\n    const res = await axios.get('/location/province')\r\n    setProvinces(res.data.provinces)\r\n  }\r\n  const fetchDistrict = async () => {\r\n    if (!address.province) return null\r\n    const res = await axios.get('/location/district/' + address.province)\r\n    setDistricts(res.data.districts)\r\n  }\r\n  const fetchSubDistrict = async () => {\r\n    if (!address.district) return null\r\n\r\n    console.log(address.province)\r\n    console.log(address.district)\r\n    const res = await axios.get('/location/subdistrict/' + address.district)\r\n    setSubDistricts(res.data.subDistricts)\r\n  }\r\n  useEffect(() => {\r\n    fetchProvince()\r\n    fetchDistrict()\r\n    fetchSubDistrict()\r\n  }, [address])\r\n\r\n  const handleProvinceSelected = (e) => {\r\n    const newAddress = { ...address }\r\n    setAddress({\r\n      ...newAddress,\r\n      province: e.target.value\r\n    })\r\n  }\r\n  const handleDistrictSelected = (e) => {\r\n    const newAddress = { ...address }\r\n    setAddress({\r\n      ...newAddress,\r\n      district: e.target.value\r\n    })\r\n  }\r\n  const handleSubDistrictSelected = (e) => {\r\n    const newAddress = { ...address }\r\n    setAddress({\r\n      ...newAddress,\r\n      subDistrict: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault()\r\n    const res = await axios.post('/register', {\r\n      username,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      email,\r\n      textAddress,\r\n      address\r\n    })\r\n    localStorageService.setToken(res.data.token)\r\n    setIsAuthenticated(true)\r\n    fetchProfile()\r\n    history.push('/')\r\n  }\r\n\r\n  const handleSubmitRegister = async (data) => {\r\n    if (data.password !== data.confirmPassword)\r\n      return setIsPasswordNotMatched(true)\r\n    const newData = { ...data, ...address }\r\n    console.log(newData)\r\n    const res = await axios.post('/register', newData)\r\n    localStorageService.setToken(res.data.token)\r\n    setIsAuthenticated(true)\r\n    fetchProfile()\r\n    history.push('/')\r\n  }\r\n\r\n  const [show, setShow] = useState(false)\r\n  const [show2, setShow2] = useState(false)\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Wrap justify=\"center\" m={8}>\r\n        <Box\r\n          w=\"400px\"\r\n          p={8}\r\n          d=\"flex\"\r\n          justfiy=\"center\"\r\n          flexDirection=\"column\"\r\n          bg=\"orange.100\"\r\n          rounded=\"20px\"\r\n        >\r\n          <Text\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize=\"lg\"\r\n            color=\"blueMain.200\"\r\n            mb={3}\r\n          >\r\n            Register\r\n          </Text>\r\n\r\n          <form onSubmit={handleSubmit(handleSubmitRegister)}>\r\n            <Input\r\n              placeholder=\"ชื่อผู้ใช้\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('username')}\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            {isPasswordNotMatched && (\r\n              <Text fontSize=\"xs\" color=\"red\">\r\n                *รหัสผ่านไม่เหมือนกัน\r\n              </Text>\r\n            )}\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                placeholder=\"รหัสผ่าน\"\r\n                type={show ? 'text' : 'password'}\r\n                pr=\"4.5rem\"\r\n                size=\"sm\"\r\n                bg=\"muted.100\"\r\n                mb={2}\r\n                {...register('password')}\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value)\r\n                  if (isPasswordNotMatched) setIsPasswordNotMatched(false)\r\n                }}\r\n              />\r\n              <InputRightElement w=\"4.5rem\" h=\"32px\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  h=\"20px\"\r\n                  colorScheme=\"blue\"\r\n                  onClick={() => setShow(!show)}\r\n                  boxSizing=\"border-box\"\r\n                >\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                placeholder=\"ยืนยันรหัสผ่าน\"\r\n                type={show2 ? 'text' : 'password'}\r\n                pr=\"4.5rem\"\r\n                size=\"sm\"\r\n                bg=\"muted.100\"\r\n                mb={2}\r\n                {...register('confirmPassword')}\r\n                onChange={() => {\r\n                  if (isPasswordNotMatched) setIsPasswordNotMatched(false)\r\n                }}\r\n              />\r\n              <InputRightElement w=\"4.5rem\" h=\"32px\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  h=\"20px\"\r\n                  colorScheme=\"blue\"\r\n                  onClick={() => setShow2(!show2)}\r\n                  boxSizing=\"border-box\"\r\n                >\r\n                  {show2 ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <Input\r\n              placeholder=\"ชื่อจริง\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('firstName')}\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"นามสกุล\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('lastName')}\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"เบอร์โทรศัพท์\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('phoneNumber')}\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"อีเมล\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('email')}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {/* <InputGroup>\r\n              <Flex>\r\n                <InputLeftElement h=\"32px\" size=\"sm\" placeholder=\"รูปภาพ\">\r\n                  <Text ml=\"2rem\" textAlign=\"center\">\r\n                    รูปภาพ\r\n                  </Text>\r\n                </InputLeftElement>\r\n                <Input\r\n                  type=\"file\"\r\n                  size=\"sm\"\r\n                  bg=\"muted.100\"\r\n                  mb={2}\r\n                  pl=\"5rem\"\r\n                  {...register('avartar')}\r\n                  // onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Flex>\r\n            </InputGroup> */}\r\n            {/* ที่อยู่ */}\r\n            <Input\r\n              placeholder=\"บ้านเลขที่ / อาคาร / หมู่บ้าน\"\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              {...register('textAddress')}\r\n              value={textAddress}\r\n              onChange={(e) => setTextAddress(e.target.value)}\r\n            />\r\n            <Select\r\n              placeholder=\"จังหวัด\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              onChange={handleProvinceSelected}\r\n            >\r\n              {provinces.map((item, index) => (\r\n                <option value={item.nameTh} key={item.id}>\r\n                  {item.nameTh}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              placeholder=\"อำเภอ/เขต\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              onChange={handleDistrictSelected}\r\n            >\r\n              {districts.map((item, index) => (\r\n                <option value={item.nameTh} key={item.id}>\r\n                  {item.nameTh}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              placeholder=\"ตำบล/แขวง\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              mb={2}\r\n              onChange={handleSubDistrictSelected}\r\n            >\r\n              {subDistricts.map((item, index) => (\r\n                <option value={item.nameTh} key={item.id}>\r\n                  {item.nameTh}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              placeholder=\"รหัสไปรษณีย์\"\r\n              size=\"sm\"\r\n              bg=\"muted.100\"\r\n              {...register('postCode')}\r\n              setAddress\r\n              mb={2}\r\n              onChange={(e) =>\r\n                setAddress({ ...address, postCode: e.target.value })\r\n              }\r\n            >\r\n              {subDistricts\r\n                .filter((item) => item.nameTh === address.subDistrict)\r\n                .map((item, index) => (\r\n                  <option value={item.zipCode} key={item.id}>\r\n                    {item.zipCode}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n            <Flex align=\"center\" direction=\"column\">\r\n              <Button\r\n                type=\"submit\"\r\n                bg=\"blueMain.100\"\r\n                mt={3}\r\n                // onClick={handleRegister}\r\n              >\r\n                สมัครสมาชิก\r\n              </Button>\r\n            </Flex>\r\n          </form>\r\n        </Box>\r\n      </Wrap>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import { Button } from '@chakra-ui/button'\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogContent,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogOverlay\r\n} from '@chakra-ui/modal'\r\nimport axios from '../../config/axios'\r\nimport React from 'react'\r\n\r\nfunction RemoveFromCartAlert({ fetchCart, handleSubmit, productId }) {\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n  const onClose = () => setIsOpen(false)\r\n  const cancelRef = React.useRef()\r\n  const handleRemoveFromCart = async (data) => {\r\n    await axios.put('/cart/user', { productId })\r\n    onClose()\r\n    fetchCart()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Button colorScheme=\"red\" onClick={() => setIsOpen(true)}>\r\n        Delete Customer\r\n      </Button> */}\r\n      <Button\r\n        type=\"submit\"\r\n        size=\"sm\"\r\n        mt={2}\r\n        size=\"xs\"\r\n        onClick={() => setIsOpen(true)}\r\n      >\r\n        นำออกจากรถเข็น\r\n      </Button>\r\n\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              นำสินค้าออกจากรถเข็น\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              คุณต้องการนำสินค้าออกจากรถเข็นใช่หรือไม่\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={handleSubmit(handleRemoveFromCart)}\r\n                ml={3}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RemoveFromCartAlert\r\n","import {\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Spacer,\r\n  Flex,\r\n  NumberInput,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  NumberInputField,\r\n  Button\r\n} from '@chakra-ui/react'\r\nimport axios from '../../config/axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { CartContext } from '../../contexts/CartContextProvider'\r\nimport RemoveFromCartAlert from './RemoveFromCartAlert'\r\n\r\nfunction ProductContainer({\r\n  product,\r\n  description,\r\n  quantity,\r\n  price,\r\n  productId,\r\n  imgPath,\r\n  profile\r\n}) {\r\n  const { register, handleSubmit, watch } = useForm()\r\n  const { fetchCart } = useContext(CartContext)\r\n  const updateCart = async (data) => {\r\n    try {\r\n      const newData = { ...data, productId }\r\n      console.log(newData)\r\n      if (!profile.id) {\r\n        await axios.post('/cart', { ...newData, unitPrice: price })\r\n      } else if (data.quantity !== '0') await axios.post('/cart/user', newData)\r\n      fetchCart()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  console.log(watch())\r\n  console.log(productId)\r\n  // useEffect(() => {}, [watch().quantity])\r\n\r\n  return (\r\n    <Flex\r\n      align=\"center\"\r\n      m=\"1\"\r\n      borderBottom=\"1px solid\"\r\n      borderColor=\"gray.200\"\r\n      pb={1}\r\n    >\r\n      <AspectRatio minW=\"142px\" w=\"150px\" ratio={1}>\r\n        <Image src={imgPath} boxSize=\"90px\"></Image>\r\n      </AspectRatio>\r\n      <Flex mx=\"2\" align=\"baseline\" direction=\"column\">\r\n        <Text as=\"h2\" fontWeight=\"semibold\">\r\n          {product}\r\n        </Text>\r\n        <Text fontSize=\"sm\">{description}</Text>\r\n        <Text fontSize=\"sm\" color=\"red\">\r\n          &#3647; {+price}\r\n        </Text>\r\n      </Flex>\r\n      <Spacer />\r\n\r\n      <form onSubmit={handleSubmit(updateCart)}>\r\n        <Flex direction=\"column\" align=\"flex-end\">\r\n          <Text mb=\"2\" textAlign=\"end\">\r\n            {price * quantity}.-\r\n          </Text>\r\n          <NumberInput min={0} mx={2} defaultValue={quantity} w=\"80px\">\r\n            <NumberInputField {...register('quantity')} bg=\"muted.100\" />\r\n            <NumberInputStepper>\r\n              <NumberIncrementStepper />\r\n              <NumberDecrementStepper />\r\n            </NumberInputStepper>\r\n          </NumberInput>\r\n          {watch().quantity !== '0' && (\r\n            <Button type=\"submit\" size=\"sm\" mt={2}>\r\n              อัพเดท\r\n            </Button>\r\n          )}\r\n          {watch().quantity == '0' && (\r\n            // <Button type=\"submit\" size=\"sm\" mt={2} size=\"xs\">\r\n            //   นำออกจากรถเข็น\r\n            // </Button>\r\n            <RemoveFromCartAlert\r\n              fetchCart={fetchCart}\r\n              handleSubmit={handleSubmit}\r\n              productId={productId}\r\n            />\r\n          )}\r\n        </Flex>\r\n      </form>\r\n    </Flex>\r\n  )\r\n}\r\nexport default ProductContainer\r\n","import { Box, Input, Text, Textarea } from '@chakra-ui/react'\r\nimport React from 'react'\r\n// import { useForm } from 'react-hook-form'\r\n\r\nfunction OrderAddress({ profile, register }) {\r\n  return (\r\n    <Box>\r\n      <Text mr={2}>ชื่อจริง</Text>\r\n      <Input\r\n        {...register('firstName')}\r\n        size=\"xs\"\r\n        borderColor=\"primary.200\"\r\n        _focus={{ borderColor: 'blueMain.200' }}\r\n        defaultValue={profile.firstName}\r\n      />\r\n      <Text mr={2}>นามสกุล</Text>\r\n      <Input\r\n        {...register('surName')}\r\n        size=\"xs\"\r\n        borderColor=\"primary.200\"\r\n        _focus={{ borderColor: 'blueMain.200' }}\r\n        defaultValue={profile.lastName}\r\n      />\r\n      <Text mr={2}>โทร</Text>\r\n      <Input\r\n        {...register('phone')}\r\n        size=\"xs\"\r\n        borderColor=\"primary.200\"\r\n        _focus={{ borderColor: 'blueMain.200' }}\r\n        defaultValue={profile.phoneNumber}\r\n      />\r\n      <Text mr={2}>อีเมล</Text>\r\n      <Input\r\n        {...register('email')}\r\n        size=\"xs\"\r\n        borderColor=\"primary.200\"\r\n        _focus={{ borderColor: 'blueMain.200' }}\r\n        defaultValue={profile.email}\r\n      />\r\n      <Text>ที่อยู่</Text>\r\n      <Textarea\r\n        {...register('address')}\r\n        size=\"xs\"\r\n        borderColor=\"primary.200\"\r\n        _focus={{ borderColor: 'blueMain.200' }}\r\n        defaultValue={`${profile.textAddress || ''} ${\r\n          profile.subDistrict || ''\r\n        } ${profile.district || ''} ${profile.province || ''} ${\r\n          profile.postCode || ''\r\n        }`}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default OrderAddress\r\n","import {\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogContent,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogOverlay\r\n} from '@chakra-ui/react'\r\nimport { useRef, useState } from 'react'\r\n\r\nfunction RemoveAllFromCartButton({ fetchCart, axios }) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const onClose = () => setIsOpen(false)\r\n  const cancelRef = useRef()\r\n  const handleRemoveAllFromCart = async () => {\r\n    await axios.delete('/cart/user')\r\n    onClose()\r\n    fetchCart()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        _hover={{ boxShadow: 'md' }}\r\n        _active={{ boxShadow: 'lg' }}\r\n        onClick={() => setIsOpen(true)}\r\n      >\r\n        นำสินค้าออกจากรถเข็นทั้งหมด\r\n      </Button>\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              นำสินค้าออกจากรถเข็นทั้งหมด\r\n            </AlertDialogHeader>\r\n            <AlertDialogBody>\r\n              คุณต้องการนำสินค้าออกจากรถเข็นทั้งหมดใช่หรือไม่\r\n            </AlertDialogBody>\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                ยกเลิก\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={handleRemoveAllFromCart}\r\n                ml={3}\r\n              >\r\n                นำสินค้าออกจากรถเข็นทั้งหมด\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RemoveAllFromCartButton\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Container,\r\n  Flex,\r\n  Heading,\r\n  Spacer,\r\n  Text\r\n} from '@chakra-ui/react'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport Header from '../component/layout/Header'\r\nimport CartContainer from '../component/cart/CartContainer'\r\nimport { CartContext } from '../contexts/CartContextProvider'\r\nimport axios from '../config/axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport localStorageService from '../services/localStorageService'\r\nimport { ProfileContext } from '../contexts/ProfileContextProvider'\r\nimport OrderAddress from '../component/sales/OrderAddress'\r\nimport { useForm } from 'react-hook-form'\r\nimport RemoveAllFromCartButton from '../component/cart/RemoveAllFromCartButton'\r\n\r\nfunction CartPage() {\r\n  const history = useHistory()\r\n  const { cart, setCart, fetchCart } = useContext(CartContext)\r\n  const [isFetchAddress, setIsFetchAddress] = useState(false)\r\n  let total = 0\r\n  const handleConfirmOrder = async (data) => {\r\n    if (!profile.id) {\r\n      const cartItemId = cart.map((item, index) => item.id)\r\n      const newData = { ...data, cartItemId }\r\n      const res = await axios.post('/order/guest', newData)\r\n      console.log(res.data.orderId)\r\n      localStorageService.clearToken()\r\n      setCart([])\r\n      history.push('/order/' + res.data.orderId)\r\n    } else {\r\n      const res = await axios.post('/order', data)\r\n      fetchCart()\r\n      history.push('/order/' + res.data.orderId)\r\n    }\r\n  }\r\n  const { profile, fetchProfile } = useContext(ProfileContext)\r\n  const { register, handleSubmit } = useForm()\r\n\r\n  useEffect(() => {\r\n    if (profile.firstName) setIsFetchAddress(true)\r\n  }, [profile.firstName])\r\n\r\n  const handleRemoveAllFromCart = async () => {\r\n    await axios.delete('/cart/user')\r\n    fetchCart()\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Center>\r\n        <Box w=\"750px\" m=\"2\">\r\n          <Heading mx=\"10px\" my=\"10px\">\r\n            ตะกร้าสินค้า\r\n          </Heading>\r\n          <Container\r\n            border=\"1px solid black\"\r\n            maxW=\"container.md\"\r\n            mx=\"0\"\r\n            p=\"3\"\r\n            borderRadius=\"xl\"\r\n          >\r\n            {cart.map((item, index) => {\r\n              total += item.Product.price * item.quantity\r\n\r\n              return (\r\n                <CartContainer\r\n                  key={item.id}\r\n                  cartItemId={item.id}\r\n                  product={item.Product.name}\r\n                  description={item.Product.description}\r\n                  price={item.Product.price}\r\n                  quantity={item.quantity}\r\n                  productId={item.productId}\r\n                  imgPath={item.Product.imgPath}\r\n                  profile={profile}\r\n                />\r\n              )\r\n            })}\r\n            <form onSubmit={handleSubmit(handleConfirmOrder)}>\r\n              <Flex mt={3}>\r\n                {isFetchAddress && (\r\n                  <OrderAddress profile={profile} register={register} />\r\n                )}\r\n                {!isFetchAddress && (\r\n                  <OrderAddress profile={profile} register={register} />\r\n                )}\r\n                <Spacer />\r\n                <Box>\r\n                  <Text textAlign=\"end\">ยอดรวมทั้งหมด </Text>\r\n                  <Text fontWeight=\"semibold\" textAlign=\"end\" my={1}>\r\n                    &#3647; {total}\r\n                  </Text>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"sm\"\r\n                    border=\"1px solid\"\r\n                    borderColor=\"orangeMain.200\"\r\n                    bg=\"orangeMain.100\"\r\n                    _hover={{ bg: 'orangeMain.200', boxShadow: 'lg' }}\r\n                    // onClick={handleConfirmOrder}\r\n                  >\r\n                    สั่งซื้อสินค้าในรถเข็น\r\n                  </Button>\r\n                </Box>\r\n              </Flex>\r\n            </form>\r\n          </Container>\r\n          <Flex direction=\"row-reverse\" mt={3}>\r\n            <RemoveAllFromCartButton fetchCart={fetchCart} axios={axios} />\r\n          </Flex>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CartPage\r\n","import { Button } from '@chakra-ui/button'\r\nimport { Image } from '@chakra-ui/image'\r\nimport { Box, Container, Flex, Spacer, Text, Wrap } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport Header from '../component/layout/Header'\r\n\r\nfunction SingleProductPage() {\r\n  return (\r\n    <Box>\r\n      <Header />\r\n\r\n      <Wrap justify=\"center\">\r\n        <Wrap bg=\"muted.200\" p={3} rounded=\"20px\">\r\n          <Image maxW=\"400px\" src={'/img/Slide1.JPG'} alt=\"product\" />\r\n          <Spacer />\r\n          <Flex maxW=\"500px\" pl={10} direction=\"column\">\r\n            <Text as=\"h2\" fontWeight=\"semibold\" mt={2}>\r\n              Lorem ipsum dolor sit amet consectetur.\r\n            </Text>\r\n            <Container bg=\"muted.300\" p={2} m={1}>\r\n              <Text color=\"red\" fontSize=\"2xl\">\r\n                &#3647; 150.-\r\n              </Text>\r\n            </Container>\r\n            <Text>\r\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit. Voluptas\r\n              officiis nam dolorum.\r\n            </Text>\r\n            <Text>รุ่น : Lorem, ipsum.</Text>\r\n\r\n            <Box mt={4}>\r\n              <Button\r\n                bg=\"blueMain.100\"\r\n                _hover={{ boxShadow: 'md' }}\r\n                _active={{ boxShadow: 'lg', bg: 'blueMain.200' }}\r\n              >\r\n                เพิ่มไปยังรถเข็น\r\n              </Button>\r\n            </Box>\r\n            <Spacer />\r\n            {/* <Flex align=\"flex-end\">\r\n              <Text>ราคา 150.-</Text>\r\n              <Spacer />\r\n              <Flex>\r\n                <Button\r\n                  bg=\"blueMain.100\"\r\n                  _hover={{ boxShadow: 'md' }}\r\n                  _active={{ boxShadow: 'lg', bg: 'blueMain.200' }}\r\n                >\r\n                  เพิ่มไปยังรถเข็น\r\n                </Button>\r\n              </Flex>\r\n            </Flex> */}\r\n          </Flex>\r\n        </Wrap>\r\n      </Wrap>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SingleProductPage\r\n","import { Badge, Box, Flex, Grid, Spacer, Text } from '@chakra-ui/layout'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction UserOrder({ orders }) {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      {orders.map((item, index) => (\r\n        <Flex\r\n          border=\"1px solid\"\r\n          borderColor=\"blueMain.200\"\r\n          fontSize=\"sm\"\r\n          p={3}\r\n          mb={2}\r\n          align=\"center\"\r\n          rounded=\"20px\"\r\n          key={item.id}\r\n          onClick={() => history.push('/order/' + item.id)}\r\n        >\r\n          <Grid gridGap={2}>\r\n            <Text>หมายเลขคำสั่งซื้อ {item.id}</Text>\r\n            <Text>\r\n              <Text>วันที่สั่งซื้อ {item.createdAt.slice(0, 10)} </Text>\r\n            </Text>\r\n          </Grid>\r\n          <Spacer />\r\n          <Box>\r\n            <Text textAlign=\"end\">\r\n              {item.TransactionItems.reduce(\r\n                (acc, transactionItem) =>\r\n                  (acc += transactionItem.quantity * transactionItem.unitPrice),\r\n                0\r\n              )}\r\n            </Text>\r\n            {item.status === 'ORDERED' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"yellow.500\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                ยังไม่ได้ชำระเงิน\r\n              </Badge>\r\n            )}\r\n            {item.status === 'CANCELLED' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"red.500\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                คำสั่งซื้อถูกยกเลิก\r\n              </Badge>\r\n            )}\r\n            {item.status === 'WAITING_PAYMENT_APPROVAL' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"blue.500\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                รอตรวจสอบสลิป\r\n              </Badge>\r\n            )}\r\n            {item.status === 'PAYMENT_RECEIVED' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"green.400\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                ได้รับเงินแล้ว\r\n              </Badge>\r\n            )}\r\n            {item.status === 'SHIPED' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"green.300\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                จัดส่งแล้ว\r\n              </Badge>\r\n            )}\r\n            {item.status === 'COMPLETED' && (\r\n              <Badge\r\n                fontSize=\"sm\"\r\n                bg=\"green.500\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                rounded=\"20px\"\r\n                color=\"muted.100\"\r\n              >\r\n                สำเร็จ\r\n              </Badge>\r\n            )}\r\n          </Box>\r\n        </Flex>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserOrder\r\n","import { Box, Text } from '@chakra-ui/layout'\r\nimport axios from '../../config/axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\nfunction UserProfile() {\r\n  const [profile, setProfile] = useState({})\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const res = await axios.get('/user/me')\r\n        console.log(res)\r\n        setProfile(res.data)\r\n      } catch (err) {\r\n        console.dir(err)\r\n      }\r\n    }\r\n    fetchProfile()\r\n  }, [])\r\n  return (\r\n    <Box>\r\n      <Text>\r\n        ชื่อ {profile.firstName} {profile.lastName}\r\n      </Text>\r\n      <Text>\r\n        ที่อยู่{' '}\r\n        {`${profile.textAddress}, ${profile.subDistrict}, ${profile.district}, ${profile.province}, ${profile.postCode}`}\r\n      </Text>\r\n      <Text>เบอร์โทรศัพท์ {profile.phoneNumber}</Text>\r\n      <Text>อีเมล {profile.email} </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import { Box, Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction UserSummary({ orders }) {\r\n  const validOrder = orders.filter((item, index) => item.status !== 'CANCELLED')\r\n  return (\r\n    <Box>\r\n      <Text>\r\n        ยอดซื้อรวม:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              (total += order.TransactionItems.reduce(\r\n                (acc, TransactionItem) =>\r\n                  (acc += TransactionItem.unitPrice * TransactionItem.quantity),\r\n                0\r\n              )),\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n      <Text>\r\n        ยังไม่ได้ชำระเงิน:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              order.status === 'ORDERED'\r\n                ? (total += order.TransactionItems.reduce(\r\n                    (acc, TransactionItem) =>\r\n                      (acc +=\r\n                        TransactionItem.unitPrice * TransactionItem.quantity),\r\n                    0\r\n                  ))\r\n                : total,\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n      <Text>\r\n        รอตรวจสอบสลิป:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              order.status === 'WAITING_PAYMENT_APPROVAL'\r\n                ? (total += order.TransactionItems.reduce(\r\n                    (acc, TransactionItem) =>\r\n                      (acc +=\r\n                        TransactionItem.unitPrice * TransactionItem.quantity),\r\n                    0\r\n                  ))\r\n                : total,\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n      <Text>\r\n        ชำระเงินแล้ว:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              order.status === 'PAYMENT_RECEIVED'\r\n                ? (total += order.TransactionItems.reduce(\r\n                    (acc, TransactionItem) =>\r\n                      (acc +=\r\n                        TransactionItem.unitPrice * TransactionItem.quantity),\r\n                    0\r\n                  ))\r\n                : total,\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n      <Text>\r\n        กำลังจัดส่ง:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              order.status === 'SHIPED'\r\n                ? (total += order.TransactionItems.reduce(\r\n                    (acc, TransactionItem) =>\r\n                      (acc +=\r\n                        TransactionItem.unitPrice * TransactionItem.quantity),\r\n                    0\r\n                  ))\r\n                : total,\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n      <Text>\r\n        สำเร็จ:{' '}\r\n        <Text as=\"span\" fontWeight=\"semibold\">\r\n          {validOrder.reduce(\r\n            (total, order) =>\r\n              order.status === 'COMPLETED'\r\n                ? (total += order.TransactionItems.reduce(\r\n                    (acc, TransactionItem) =>\r\n                      (acc +=\r\n                        TransactionItem.unitPrice * TransactionItem.quantity),\r\n                    0\r\n                  ))\r\n                : total,\r\n            0\r\n          )}\r\n        </Text>\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UserSummary\r\n","import { Avatar } from '@chakra-ui/avatar'\r\nimport { Box, Center, Circle, Flex, Text, Wrap } from '@chakra-ui/layout'\r\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/tabs'\r\nimport axios from '../config/axios'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Header from '../component/layout/Header'\r\nimport UserOrder from '../component/profile/UserOrder'\r\nimport UserProfile from '../component/profile/UserProfile'\r\nimport UserSummary from '../component/profile/UserSummary'\r\nimport { ProfileContext } from '../contexts/ProfileContextProvider'\r\nimport { Input } from '@chakra-ui/input'\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control'\r\n// import { useForm } from 'react-hook-form'\r\n\r\nfunction ProfilePage() {\r\n  const [orders, setOrders] = useState([])\r\n  const { profile, fetchProfile, setProfile } = useContext(ProfileContext)\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        const res = await axios.get('/order/user')\r\n        setOrders(res.data.order)\r\n      } catch (err) {\r\n        console.dir(err)\r\n      }\r\n    }\r\n    fetchOrder()\r\n  }, [])\r\n  const handleChangePicture = async (e) => {\r\n    try {\r\n      // console.log(e.target.files[0])\r\n      const formData = new FormData()\r\n      formData.append('image', e.target.files[0])\r\n      const res = await axios.post('/user/picture', formData)\r\n      console.log(res)\r\n      const newProfile = { ...profile, path: res.data.imagePath }\r\n      setProfile(newProfile)\r\n    } catch (err) {\r\n      console.dir(err)\r\n    }\r\n  }\r\n  const handleDeletePicture = async () => {\r\n    await axios.delete('/user/picture')\r\n    const newProfile = { ...profile, path: '' }\r\n    setProfile(newProfile)\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Wrap justify=\"center\" p={3}>\r\n        <Flex w=\"400px\" justify=\"center\" py={5}>\r\n          <Flex direction=\"column\">\r\n            <Circle boxSize=\"180px\">\r\n              <Avatar\r\n                src={profile.path}\r\n                name={`${profile.firstName} ${profile.lastName}`}\r\n                size=\"xl\"\r\n                w=\"full\"\r\n                h=\"full\"\r\n              />\r\n            </Circle>\r\n            <FormControl>\r\n              <FormLabel\r\n                mt={3}\r\n                textAlign=\"center\"\r\n                textDecor=\"underline\"\r\n                ml=\"12px\"\r\n                _hover={{\r\n                  cursor: 'pointer',\r\n                  color: 'gray.700',\r\n                  textShadow: 'lg'\r\n                }}\r\n              >\r\n                <Text color=\"gray.600\" _hover={{ color: 'black' }}>\r\n                  เปลี่ยนรูปภาพ\r\n                </Text>\r\n              </FormLabel>\r\n              <Input type=\"file\" hidden onChange={handleChangePicture} />\r\n            </FormControl>\r\n            <Flex justify=\"center\">\r\n              <Text\r\n                fontSize=\"xs\"\r\n                color=\"gray.500\"\r\n                as=\"u\"\r\n                textAlign=\"center\"\r\n                _hover={{ cursor: 'pointer', color: 'gray.700' }}\r\n                onClick={handleDeletePicture}\r\n              >\r\n                ลบรูปภาพ\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex direction=\"column\">\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>ข้อมูลส่วนตัว</Tab>\r\n              <Tab>ประวัติการซื้อ</Tab>\r\n              <Tab>สรุปยอดซื้อ</Tab>\r\n            </TabList>\r\n\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <UserProfile />\r\n              </TabPanel>\r\n\r\n              <TabPanel>\r\n                <UserOrder orders={orders} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <UserSummary orders={orders} />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </Flex>\r\n      </Wrap>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import { Flex, Spacer, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nfunction OrderItem({ item, product }) {\r\n  console.log(item)\r\n  return (\r\n    <Flex>\r\n      <Text mr=\"1rem\">1. </Text>\r\n      <Text>{product.name}</Text>\r\n      <Spacer />\r\n      <Text mr={5} color=\"gray.500\">\r\n        {item.quantity}ชิ้น\r\n      </Text>\r\n      <Text color=\"red.500\" fontWeight=\"semibold\">\r\n        {item.quantity * item.unitPrice}\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default OrderItem\r\n","import { Button } from '@chakra-ui/button'\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control'\r\nimport { Input } from '@chakra-ui/input'\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Center,\r\n  Container,\r\n  Flex,\r\n  Heading,\r\n  Spacer,\r\n  Text\r\n} from '@chakra-ui/layout'\r\nimport axios from '../config/axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../component/layout/Header'\r\n// import { ProfileContext } from '../contexts/ProfileContextProvider'\r\nimport OrderItem from '../component/order/OrderItem'\r\n\r\nfunction SingleOrderPage() {\r\n  const params = useParams()\r\n  const [order, setOrder] = useState({ TransactionItems: [] })\r\n  const [file, setFile] = useState({})\r\n  const [isError, setIsError] = useState(false)\r\n  // const { profile } = useContext(ProfileContext)\r\n  const fetchOrder = async () => {\r\n    const res = await axios.get('/order/' + params.id)\r\n    setOrder(res.data.order)\r\n  }\r\n  useEffect(() => {\r\n    fetchOrder()\r\n  }, [])\r\n\r\n  const handleCancelOrder = async () => {\r\n    try {\r\n      const res = await axios.put('/order/' + params.id, {\r\n        status: 'CANCELLED'\r\n      })\r\n      fetchOrder()\r\n    } catch (err) {\r\n      console.dir(err)\r\n    }\r\n  }\r\n  const handleUploadSlip = (e) => {\r\n    setFile(e.target.files[0])\r\n    console.log(e.target.files[0])\r\n    setIsError(false)\r\n  }\r\n  const handleAddSlip = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      const formData = new FormData()\r\n      formData.append('image', file)\r\n      if (!file.name) return setIsError(true)\r\n      await axios.post('/order/slip/' + params.id, formData)\r\n      await axios.put('/order/' + params.id, {\r\n        status: 'WAITING_PAYMENT_APPROVAL'\r\n      })\r\n      fetchOrder()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  // const {}\r\n\r\n  return (\r\n    <Box bg=\"gray.10\">\r\n      <Header />\r\n      <Container maxW=\"container.md\">\r\n        <Heading fontSize=\"2xl\">ตรวจสอบคำสั่งซื้อ</Heading>\r\n        <Center>\r\n          <Container\r\n            maxW=\"container.md\"\r\n            bg=\"muted.200\"\r\n            border=\"black 1px solid\"\r\n            p={5}\r\n            m={2}\r\n            rounded=\"20px\"\r\n          >\r\n            <Flex>\r\n              <Box>\r\n                <Flex mb={2}>\r\n                  วันที่{' '}\r\n                  <Text ml={2} fontWeight=\"semibold\">\r\n                    {order.createdAt && order.createdAt.slice(0, 10)}\r\n                  </Text>\r\n                </Flex>\r\n                <Flex mb={2}>\r\n                  หมายเลขคำสั่งซื้อ{' '}\r\n                  <Text ml={2} fontWeight=\"semibold\">\r\n                    {order.id}\r\n                  </Text>\r\n                </Flex>\r\n              </Box>\r\n              <Spacer />\r\n              <Box>\r\n                {order.status === 'ORDERED' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"yellow.500\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    ยังไม่ได้ชำระเงิน\r\n                  </Badge>\r\n                )}\r\n                {order.status === 'CANCELLED' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"red.500\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    คำสั่งซื้อถูกยกเลิก\r\n                  </Badge>\r\n                )}\r\n                {order.status === 'WAITING_PAYMENT_APPROVAL' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"blue.500\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    รอตรวจสอบสลิป\r\n                  </Badge>\r\n                )}\r\n                {order.status === 'PAYMENT_RECEIVED' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"green.400\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    ได้รับเงินแล้ว\r\n                  </Badge>\r\n                )}\r\n                {order.status === 'SHIPED' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"green.300\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    จัดส่งแล้ว\r\n                  </Badge>\r\n                )}\r\n                {order.status === 'COMPLETED' && (\r\n                  <Badge\r\n                    fontSize=\"sm\"\r\n                    bg=\"blue.500\"\r\n                    fontWeight=\"normal\"\r\n                    px={2}\r\n                    rounded=\"20px\"\r\n                    color=\"muted.100\"\r\n                  >\r\n                    สำเร็จ\r\n                  </Badge>\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n            <Flex mb={5} wrap=\"wrap\" direction=\"column\">\r\n              <Text>{`ชื่อ: ${order.firstName} ${order.surName}`}</Text>\r\n              <Text>{`ที่อยู่: ${order.address}`}</Text>\r\n            </Flex>\r\n            {order.TransactionItems.map((item, index) => (\r\n              <OrderItem key={item.id} item={item} product={item.Product} />\r\n            ))}\r\n            <Flex justify=\"flex-end\" mt={3} align=\"baseline\">\r\n              <Text mr={4}>รวม</Text>\r\n              <Text fontSize=\"lg\" color=\"red.700\" fontWeight=\"bold\">\r\n                {order.TransactionItems.reduce(\r\n                  (acc, item) => (acc += item.quantity * item.unitPrice),\r\n                  0\r\n                )}\r\n              </Text>\r\n            </Flex>\r\n          </Container>\r\n        </Center>\r\n        <form>\r\n          <Flex>\r\n            <Container maxW=\"md\">\r\n              <FormControl>\r\n                <FormLabel _hover={{ cursor: 'pointer' }}>\r\n                  <Flex align=\"end\" justify=\"center\">\r\n                    <Text fontSize=\"sm\" mr={1} textDecor=\"underline\">\r\n                      อัพโหลดสลิป\r\n                    </Text>\r\n                  </Flex>\r\n                </FormLabel>\r\n                <Input\r\n                  type=\"file\"\r\n                  onChange={handleUploadSlip}\r\n                  size=\"sm\"\r\n                  mb={2}\r\n                />\r\n              </FormControl>\r\n              {isError && (\r\n                <Text color=\"red\" textAlign=\"center\">\r\n                  *ไม่พบไฟล์ที่อัพโหลด\r\n                </Text>\r\n              )}\r\n            </Container>\r\n          </Flex>\r\n          <Flex justify=\"center\">\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"orangeMain.100\"\r\n              _hover={{ bg: 'orangeMain.200', boxShadow: 'md' }}\r\n              _active={{ boxShadow: 'lg' }}\r\n              mx={1}\r\n              onClick={handleAddSlip}\r\n            >\r\n              ยืนยันการจ่ายเงิน\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              // bg=\"gray.100\"\r\n              _hover={{ bg: 'gray.200', boxShadow: 'md' }}\r\n              mx={1}\r\n              onClick={handleCancelOrder}\r\n            >\r\n              ยกเลิกคำสั่งซื้อ\r\n            </Button>\r\n          </Flex>\r\n        </form>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SingleOrderPage\r\n","import { Button } from '@chakra-ui/button'\r\nimport {\r\n  FormControl,\r\n  FormErrorIcon,\r\n  FormErrorMessage,\r\n  FormLabel\r\n} from '@chakra-ui/form-control'\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport { Box, Container, Flex } from '@chakra-ui/layout'\r\nimport axios from '../config/axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { set, useForm } from 'react-hook-form'\r\nimport Header from '../component/layout/Header'\r\nimport { Select } from '@chakra-ui/select'\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger\r\n} from '@chakra-ui/popover'\r\nimport { Portal } from '@chakra-ui/portal'\r\n\r\nfunction AdminCreateProduct() {\r\n  const { register, handleSubmit } = useForm()\r\n  const [name, setName] = useState('')\r\n  const [file, setFile] = useState('')\r\n  const handleCreateProduct = async (data) => {\r\n    console.log(data)\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('image', data.picture[0])\r\n      formData.append('fileName', data.picture[0].name)\r\n      formData.append('code', data.code)\r\n      formData.append('name', data.name)\r\n      formData.append('description', data.description)\r\n      formData.append('categoryId', data.categoryId)\r\n      formData.append('price', data.price)\r\n      const res = await axios.post('/product/upload', formData)\r\n      // const res = await axios.post('/product', { ...data })\r\n      console.log(res)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  const handleCreateCategory = async (data) => {\r\n    console.log(data)\r\n    const res = await axios.post('/product/category', {\r\n      code: data.categoryCode,\r\n      name: data.categoryName\r\n    })\r\n\r\n    fetchCategory()\r\n  }\r\n  const [categories, setCategories] = useState([])\r\n  const fetchCategory = async () => {\r\n    const res = await axios.get('/product/category')\r\n    console.log(res.data)\r\n    setCategories(res.data.categories)\r\n  }\r\n  useEffect(() => {\r\n    fetchCategory()\r\n  }, [])\r\n  return (\r\n    <Box>\r\n      <Header />\r\n      <Container bg=\"muted.300\" p={5} rounded=\"20px\">\r\n        <form onSubmit={handleSubmit(handleCreateProduct)}>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>รหัสสินค้า</FormLabel>\r\n            <Input\r\n              {...register('code')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"รหัสสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>ชื่อสินค้า</FormLabel>\r\n            <Input\r\n              {...register('name')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"ชื่อสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>หมวดสินค้า</FormLabel>\r\n            <Popover>\r\n              <InputGroup d=\"flex\" alignContent=\"baseline\" size=\"md\">\r\n                <Select\r\n                  {...register('categoryId')}\r\n                  mr=\"10rem\"\r\n                  size=\"sm\"\r\n                  border=\"1px solid\"\r\n                  borderColor=\"gray.400\"\r\n                  bg=\"muted.100\"\r\n                  placeholder=\"หมวดสินค้า\"\r\n                  defaultValue=\"0\"\r\n                >\r\n                  {categories.map((category, index) => (\r\n                    <option value={category.id} key={categories.id}>\r\n                      {category.code}. {category.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n                <InputRightElement width=\"10rem\" h=\"32px\">\r\n                  <PopoverTrigger>\r\n                    <Button h=\"32px\" size=\"xs\">\r\n                      เพิ่มหมวดสินค้า\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n\r\n                  <Portal>\r\n                    <PopoverContent\r\n                      bg=\"muted.100\"\r\n                      border=\"1px solid black\"\r\n                      rounded=\"20px\"\r\n                      p={2}\r\n                      w={200}\r\n                    >\r\n                      <PopoverHeader>เพิ่มหมวดสินค้า</PopoverHeader>\r\n                      <form>\r\n                        <Input\r\n                          {...register('categoryCode')}\r\n                          bg=\"muted.100\"\r\n                          placeholder=\"รหัสหมวดสินค้า\"\r\n                          size=\"xs\"\r\n                        />\r\n                        <Input\r\n                          {...register('categoryName')}\r\n                          bg=\"muted.100\"\r\n                          placeholder=\"ชื่อหมวดสินค้า\"\r\n                          size=\"xs\"\r\n                        />\r\n                        <Flex justify=\"center\">\r\n                          <Button\r\n                            onClick={handleSubmit(handleCreateCategory)}\r\n                            size=\"xs\"\r\n                          >\r\n                            ยืนยัน\r\n                          </Button>\r\n                        </Flex>\r\n                      </form>\r\n                    </PopoverContent>\r\n                  </Portal>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </Popover>\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>รายละเอียดสินค้า</FormLabel>\r\n            <Input\r\n              {...register('description')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"รายละเอียดสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>ราคาขาย</FormLabel>\r\n            <Input\r\n              {...register('price')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"ราคาขาย\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl my={2}>\r\n            <FormLabel>อัพโหลดรูปภาพ</FormLabel>\r\n            <Input\r\n              {...register('picture')}\r\n              type=\"file\"\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              // placeholder=\"อัพโหลดรูปภาพ\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <Flex justify=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              bg=\"blueMain.100\"\r\n              _hover={{ bg: 'blueMain.200' }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Flex>\r\n        </form>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AdminCreateProduct\r\n","import { Container, Flex, Spacer, Text, Wrap } from '@chakra-ui/layout'\r\nimport axios from '../config/axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Header from '../component/layout/Header'\r\nimport { Button } from '@chakra-ui/button'\r\nimport { Input } from '@chakra-ui/input'\r\nimport { useHistory } from 'react-router'\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react'\r\n\r\nfunction AdminManageProduct() {\r\n  const history = useHistory()\r\n  const [products, setProducts] = useState([])\r\n  const [totalPage, setTotalPage] = useState([1])\r\n  const [selectedPage, setSelectedPage] = useState(1)\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const res = await axios.get('/product')\r\n      setProducts(res.data.products)\r\n      const newTotalPage = [1]\r\n      for (let i = 2; i <= res.data.totalPage; i++) {\r\n        newTotalPage.push(i)\r\n      }\r\n      setTotalPage(newTotalPage)\r\n    }\r\n    fetchProducts()\r\n  }, [])\r\n  const handleSearchChange = async (e) => {\r\n    const res = await axios.get('/product?name=' + e.target.value)\r\n    setProducts(res.data.products)\r\n    const newTotalPage = [1]\r\n    for (let i = 2; i <= res.data.totalPage; i++) {\r\n      newTotalPage.push(i)\r\n    }\r\n    setTotalPage(newTotalPage)\r\n    setSelectedPage(1)\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container maxW=\"container.lg\" p={5} rounded=\"20px\" bg=\"muted.200\">\r\n        <Container maxW=\"container.md\">\r\n          <Text as=\"h2\" fontSize=\"xl\" fontWeight=\"semibold\">\r\n            หน้าจัดการสินค้า\r\n          </Text>\r\n        </Container>\r\n        <Container maxW=\"container.lg\">\r\n          <Wrap justify=\"center\">\r\n            <Button\r\n              bg=\"blueMain.100\"\r\n              _hover={{ bg: 'blueMain.200' }}\r\n              onClick={() => history.push('/admin/create/product')}\r\n            >\r\n              สร้างสินค้าใหม่\r\n            </Button>\r\n            <Spacer />\r\n            <Flex align=\"baseline\" justify=\"flex-end\" my={2}>\r\n              <Text fontSize=\"lg\" mr={2}>\r\n                ค้นหา:\r\n              </Text>\r\n              <Input\r\n                size=\"sm\"\r\n                bg=\"muted.100\"\r\n                maxW={200}\r\n                onChange={(e) => handleSearchChange(e)}\r\n              />\r\n            </Flex>\r\n          </Wrap>\r\n        </Container>\r\n\r\n        <Flex>\r\n          <Table size=\"sm\" fontSize=\"sm\">\r\n            <Thead>\r\n              <Th>รหัส</Th>\r\n              <Th>ชื่อ</Th>\r\n              <Th isNumeric>คงเหลือ</Th>\r\n              <Th isNumeric>ราคาขาย</Th>\r\n              <Th isNumeric>ราคาซื้อล่าสุด</Th>\r\n              <Th></Th>\r\n            </Thead>\r\n            <Tbody>\r\n              {products.map((product, index) => (\r\n                <Tr\r\n                  key={index}\r\n                  onClick={() =>\r\n                    history.push('/admin/manage/product/' + product.id)\r\n                  }\r\n                  _hover={{ bg: 'gray.200' }}\r\n                >\r\n                  <Td>{product.code}</Td>\r\n                  <Td>{product.name}</Td>\r\n                  <Td isNumeric>\r\n                    {product.TransactionItems &&\r\n                      product.TransactionItems.reduce(\r\n                        (acc, item) =>\r\n                          item.Transaction.type === 'SALES'\r\n                            ? (acc += -1 * item.quantity)\r\n                            : (acc += +item.quantity),\r\n                        0\r\n                      )}\r\n                  </Td>\r\n                  <Td isNumeric>{+product.price}</Td>\r\n                  <Td isNumeric>{+product.avgCost || 0}</Td>\r\n                  <Td></Td>\r\n                </Tr>\r\n                // <Box\r\n                //   key={index}\r\n                //   w=\"300px\"\r\n                //   rounded=\"20px\"\r\n                //   overflow=\"hidden\"\r\n                //   bg=\"muted.300\"\r\n                // >\r\n                //   <Center w=\"300px\" h=\"150px\" overflow=\"hidden\">\r\n                //   </Center>\r\n                //   <Box px={5} py={2}>\r\n                //     <Flex align=\"baseline\">\r\n                //       <Badge\r\n                //         variant=\"solid\"\r\n                //         bg=\"orangeMain.200\"\r\n                //         rounded=\"full\"\r\n                //         px=\"2\"\r\n                //         my={2}\r\n                //         fontWeight=\"normal\"\r\n                //       >\r\n                //         จำนวนคงเหลือ{' '}\r\n                //         {product.TransactionItems &&\r\n                //           product.TransactionItems.reduce(\r\n                //             (acc, item) =>\r\n                //               item.Transaction.type === 'SALES'\r\n                //                 ? (acc += -1 * item.quantity)\r\n                //                 : (acc += +item.quantity),\r\n                //             0\r\n                //           )}\r\n                //       </Badge>\r\n                //       {console.log(product)}\r\n                //     </Flex>\r\n                //     <Flex align=\"flex-end\">\r\n                //       <Box>\r\n                //         <Text fontSize=\"sm\">{product.name}</Text>\r\n                //         <Text fontSize=\"sm\">{product.description}</Text>\r\n                //         <Text fontSize=\"sm\">ราคา {+product.price} บาท</Text>\r\n                //       </Box>\r\n                //       <Spacer />\r\n                //       <Box>\r\n                //         <Button\r\n                //           size=\"sm\"\r\n                //           bg=\"orangeMain.100\"\r\n                //           _hover={{ bg: 'orangeMain.200' }}\r\n                //           w={16}\r\n                //         >\r\n                //           แก้ไข\r\n                //         </Button>\r\n                //       </Box>\r\n                //     </Flex>\r\n                //     <Flex align=\"flex-end\">\r\n                //       <Box w=\"50%\">\r\n                //         <Flex>\r\n                //           <Text fontSize=\"sm\" w={12}>\r\n                //             จำนวน\r\n                //           </Text>\r\n                //           <Input\r\n                //             type=\"number\"\r\n                //             size=\"xs\"\r\n                //             w={16}\r\n                //             bg=\"muted.100\"\r\n                //             border=\"1px solid black\"\r\n                //           />\r\n                //         </Flex>\r\n                //         <Flex>\r\n                //           <Text fontSize=\"sm\" w={12}>\r\n                //             ทุน\r\n                //           </Text>\r\n                //           <Input\r\n                //             type=\"number\"\r\n                //             size=\"xs\"\r\n                //             w={16}\r\n                //             bg=\"muted.100\"\r\n                //             border=\"1px solid black\"\r\n                //           />\r\n                //         </Flex>\r\n                //       </Box>\r\n                //       <Spacer />\r\n                //       <Button\r\n                //         size=\"sm\"\r\n                //         bg=\"blueMain.100\"\r\n                //         w={16}\r\n                //         _hover={{ bg: 'blueMain.200' }}\r\n                //       >\r\n                //         เพิ่ม\r\n                //       </Button>\r\n                //     </Flex>\r\n                //   </Box>\r\n                // </Box>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Flex>\r\n        <Flex justify=\"center\">\r\n          {totalPage.map((page, index) => (\r\n            <Button\r\n              key={'page' + page}\r\n              bg={selectedPage === page ? 'orangeMain.100' : ''}\r\n              _hover={{ bg: selectedPage === page ? 'orangeMain.200' : '' }}\r\n            >\r\n              {page}\r\n            </Button>\r\n          ))}\r\n        </Flex>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminManageProduct\r\n","import {\r\n  Container,\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tfoot,\r\n  Th,\r\n  Thead,\r\n  Tr\r\n} from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport Header from '../component/layout/Header'\r\n\r\nfunction AdminManageStock() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Flex>\r\n        <Container\r\n          maxW=\"container.lg\"\r\n          // m={10}\r\n          // p={3}\r\n          // border=\"1px solid black\"\r\n          // borderRadius=\"20px\"\r\n        >\r\n          <Text as=\"h2\" fontSize=\"lg\" fontWeight=\"semibold\">\r\n            เพิ่มสินค้าเข้าคลังสินค้า\r\n          </Text>\r\n          <Flex>\r\n            <Table\r\n              size=\"sm\"\r\n              border=\"1px solid black\"\r\n              borderRadius=\"20px\"\r\n              fontSize=\"sm\"\r\n            >\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>ชื่อสินค้า</Th>\r\n                  <Th isNumeric>จำนวน</Th>\r\n                  <Th isNumeric>ต้นทุน</Th>\r\n                  <Th isNumeric>รวม</Th>\r\n                  <Th isNumeric></Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                <Tr>\r\n                  <Td>1</Td>\r\n                  <Td isNumeric>1</Td>\r\n                  <Td isNumeric>1</Td>\r\n                  <Td isNumeric>1</Td>\r\n                  <Td isNumeric>ลบ</Td>\r\n                </Tr>\r\n              </Tbody>\r\n              <Tfoot>\r\n                <Tr>\r\n                  <Th></Th>\r\n                  <Th></Th>\r\n                  <Th isNumeric>รวมทั้งหมด</Th>\r\n                  <Th isNumeric>xxx</Th>\r\n                  <Th></Th>\r\n                </Tr>\r\n              </Tfoot>\r\n            </Table>\r\n          </Flex>\r\n        </Container>\r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminManageStock\r\n","import {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Input,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr\r\n} from '@chakra-ui/react'\r\nimport axios from '../config/axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Header from '../component/layout/Header'\r\nimport { useHistory } from 'react-router'\r\n\r\nfunction AdminManageOrder() {\r\n  const history = useHistory()\r\n  const [orders, setOrders] = useState([])\r\n  const [status, setStatus] = useState('WAITING_PAYMENT_APPROVAL')\r\n  const [customerName, setCustomerName] = useState('')\r\n  const [totalPage, setTotalPage] = useState([1])\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const res = await axios.get(\r\n        '/order?status=' +\r\n          status +\r\n          '&page=' +\r\n          page +\r\n          '&customer=' +\r\n          customerName\r\n      )\r\n      setOrders(res.data.orders)\r\n      // setPage(1)\r\n      const newTotalPage = [1]\r\n      for (let i = 2; i <= Math.ceil(res.data.total / 10); i++) {\r\n        newTotalPage.push(i)\r\n      }\r\n      setTotalPage(newTotalPage)\r\n    }\r\n    fetchOrders()\r\n  }, [status, page, customerName])\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Flex justify=\"center\" my={2}>\r\n        <Container maxW=\"container.lg\">\r\n          <Flex align=\"center\" justify=\"center\" direction=\"column\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  ทั้งหมด\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('ORDERED')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  ยังไม่ได้ชำระเงิน\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('WAITING_PAYMENT_APPROVAL')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  รอตรวจสอบ\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('PAYMENT_RECEIVED')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  ชำระเงินแล้ว\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('SHIPED')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  ส่งสินค้าแล้ว\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('COMPLETED')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  สำเร็จ\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem isCurrentPage>\r\n                <BreadcrumbLink\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    setStatus('CANCELLED')\r\n                    setPage(1)\r\n                  }}\r\n                >\r\n                  ยกเลิก\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n            </Breadcrumb>\r\n          </Flex>\r\n          <Flex p={2} my={2} align=\"baseline\" justify=\"center\">\r\n            <Text fontSize=\"sm\" mr={2}>\r\n              ค้นหาตามลูกค้า:\r\n            </Text>\r\n            <Input\r\n              size=\"sm\"\r\n              w=\"50%\"\r\n              onChange={(e) => setCustomerName(e.target.value)}\r\n            />\r\n          </Flex>\r\n          <Table size=\"sm\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>เลขที่</Th>\r\n                <Th>วันที่</Th>\r\n                <Th>ลูกค้า</Th>\r\n                <Th isNumeric>ยอดเงิน</Th>\r\n                <Th>สถานะ</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody fontSize=\"sm\">\r\n              {orders.map((order, index) => (\r\n                <Tr\r\n                  key={index}\r\n                  _hover={{ bg: 'gray.200', cursor: 'pointer' }}\r\n                  onClick={() =>\r\n                    history.push('/admin/manage/order/' + order.id)\r\n                  }\r\n                >\r\n                  <Td>{order.id}</Td>\r\n                  <Td>{order.date.slice(0, 10)}</Td>\r\n                  <Td>\r\n                    {order.User &&\r\n                      order.User.firstName + ' ' + order.User.lastName}\r\n                  </Td>\r\n                  <Td isNumeric>\r\n                    {order.TransactionItems &&\r\n                      order.TransactionItems.reduce(\r\n                        (acc, { quantity, unitPrice }) =>\r\n                          (acc += +quantity * +unitPrice),\r\n                        0\r\n                      )}\r\n                  </Td>\r\n                  <Td>\r\n                    {order.status === 'WAITING_PAYMENT_APPROVAL'\r\n                      ? 'รอตรวจสอบ'\r\n                      : order.status === 'ORDERED'\r\n                      ? 'ยังไม่ได้ชำระเงิน'\r\n                      : order.status === 'CANCELLED'\r\n                      ? 'ยกเลิก'\r\n                      : order.status === 'PAYMENT_RECEIVED'\r\n                      ? 'ได้รับเงินแล้วรอจัดส่ง'\r\n                      : order.status === 'SHIPED'\r\n                      ? 'จัดส่งแล้ว'\r\n                      : 'สำเร็จ'}\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n          <Flex justify=\"center\" my={2}>\r\n            {totalPage.map((item, index) =>\r\n              page === item ? (\r\n                <Button\r\n                  key={index}\r\n                  bg=\"orangeMain.200\"\r\n                  size=\"sm\"\r\n                  mx={0.5}\r\n                  _hover={{ bg: 'orangeMain.200' }}\r\n                >\r\n                  {item}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  key={index}\r\n                  size=\"sm\"\r\n                  mx={0.5}\r\n                  onClick={() => setPage(+item)}\r\n                >\r\n                  {item}\r\n                </Button>\r\n              )\r\n            )}\r\n          </Flex>\r\n        </Container>\r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminManageOrder\r\n","import { Button } from '@chakra-ui/button'\r\nimport {\r\n  FormControl,\r\n  FormErrorIcon,\r\n  FormErrorMessage,\r\n  FormLabel\r\n} from '@chakra-ui/form-control'\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport { AspectRatio, Box, Container, Flex } from '@chakra-ui/layout'\r\nimport axios from '../config/axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { set, useForm } from 'react-hook-form'\r\nimport Header from '../component/layout/Header'\r\nimport { Select } from '@chakra-ui/select'\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger\r\n} from '@chakra-ui/popover'\r\nimport { Portal } from '@chakra-ui/portal'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport ProductPictureSlider from '../component/product/ProductPictureSlider'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { GiCircle } from 'react-icons/gi'\r\nimport { BsCircleFill, BsTrash } from 'react-icons/bs'\r\nimport { ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons'\r\n\r\nfunction AdminEditProduct() {\r\n  const history = useHistory()\r\n  const params = useParams()\r\n  const [product, setProduct] = useState({})\r\n  const { register, handleSubmit } = useForm()\r\n  const [code, setCode] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [file, setFile] = useState('')\r\n  console.log(file)\r\n  const [category, setCategory] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [selectedImg, setSelectedImg] = useState(0)\r\n\r\n  const fetchCategory = async () => {\r\n    const res = await axios.get('/product/category')\r\n    console.log(res.data)\r\n    setCategories(res.data.categories)\r\n  }\r\n  const fetchProduct = async () => {\r\n    const res = await axios.get('/product/' + params.id)\r\n    setProduct(res.data.product)\r\n    console.log(res.data.product)\r\n    setCategory(res.data.product.Category.name)\r\n    setCode(res.data.product.code)\r\n    setName(res.data.product.name)\r\n    setDescription(res.data.product.description)\r\n    setPrice(+res.data.product.price)\r\n  }\r\n  useEffect(() => {\r\n    fetchProduct()\r\n    fetchCategory()\r\n  }, [])\r\n\r\n  const handleEditProduct = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      const categoryId = categories.find((item) => category === item.name).id\r\n      console.log(categoryId)\r\n      const res = await axios.put('/product/' + params.id, {\r\n        code,\r\n        name,\r\n        description,\r\n        price,\r\n        categoryId\r\n      })\r\n      history.push('/admin/manage/product')\r\n    } catch (err) {\r\n      console.dir(err)\r\n    }\r\n  }\r\n  const handleCreateCategory = async (data) => {\r\n    console.log(data)\r\n    const res = await axios.post('/product/category', {\r\n      code: data.categoryCode,\r\n      name: data.categoryName\r\n    })\r\n    fetchCategory()\r\n  }\r\n\r\n  const handleDeleteImage = async () => {\r\n    const res = await axios.delete(\r\n      '/product/image/' + product.ProductImages[selectedImg].id\r\n    )\r\n    setSelectedImg(0)\r\n    fetchProduct()\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData()\r\n    formData.append('image', file[0])\r\n    // formData.append('fileName', file[0].name)\r\n    console.log(file)\r\n    console.log(formData)\r\n    const res = await axios.post('/product/image/' + params.id, formData)\r\n    fetchProduct()\r\n  }\r\n\r\n  const handleNextSlider = () => {\r\n    if (selectedImg === product.ProductImages.length - 1) setSelectedImg(0)\r\n    else setSelectedImg(selectedImg + 1)\r\n  }\r\n  const handleBackSlider = () => {\r\n    if (selectedImg === 0) setSelectedImg(product.ProductImages.length - 1)\r\n    else setSelectedImg(selectedImg - 1)\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Header />\r\n\r\n      <Container bg=\"muted.300\" p={5} rounded=\"20px\">\r\n        <form onSubmit={handleEditProduct}>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>รหัสสินค้า</FormLabel>\r\n            <Input\r\n              //   {...register('code')}\r\n              value={code}\r\n              onChange={(e) => setCode(e.target.value)}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"รหัสสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>ชื่อสินค้า</FormLabel>\r\n            <Input\r\n              //   {...register('name')}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"ชื่อสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>หมวดสินค้า</FormLabel>\r\n            <Popover>\r\n              <InputGroup d=\"flex\" alignContent=\"baseline\" size=\"md\">\r\n                {product.Category && (\r\n                  <Select\r\n                    // {...register('category')}\r\n                    mr=\"10rem\"\r\n                    size=\"sm\"\r\n                    border=\"1px solid\"\r\n                    borderColor=\"gray.400\"\r\n                    bg=\"muted.100\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    // placeholder={\r\n                    //   product.Category.code + '. ' + product.Category.name\r\n                    // }\r\n                  >\r\n                    {categories.map((category, index) => (\r\n                      <option key={categories.id}>{category.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n                <InputRightElement width=\"10rem\" h=\"32px\">\r\n                  <PopoverTrigger>\r\n                    <Button h=\"32px\" size=\"xs\">\r\n                      เพิ่มหมวดสินค้า\r\n                    </Button>\r\n                  </PopoverTrigger>\r\n\r\n                  <Portal>\r\n                    <PopoverContent\r\n                      bg=\"muted.100\"\r\n                      border=\"1px solid black\"\r\n                      rounded=\"20px\"\r\n                      p={2}\r\n                      w={200}\r\n                    >\r\n                      <PopoverHeader>เพิ่มหมวดสินค้า</PopoverHeader>\r\n                      <form>\r\n                        <Input\r\n                          {...register('categoryCode')}\r\n                          bg=\"muted.100\"\r\n                          placeholder=\"รหัสหมวดสินค้า\"\r\n                          size=\"xs\"\r\n                        />\r\n                        <Input\r\n                          {...register('categoryName')}\r\n                          bg=\"muted.100\"\r\n                          placeholder=\"ชื่อหมวดสินค้า\"\r\n                          size=\"xs\"\r\n                        />\r\n                        <Flex justify=\"center\">\r\n                          <Button\r\n                            onClick={handleSubmit(handleCreateCategory)}\r\n                            size=\"xs\"\r\n                          >\r\n                            ยืนยัน\r\n                          </Button>\r\n                        </Flex>\r\n                      </form>\r\n                    </PopoverContent>\r\n                  </Portal>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </Popover>\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>รายละเอียดสินค้า</FormLabel>\r\n            <Input\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              //   {...register('description')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"รายละเอียดสินค้า\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired my={2}>\r\n            <FormLabel>ราคาขาย</FormLabel>\r\n            <Input\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              //   {...register('price')}\r\n              size=\"sm\"\r\n              border=\"1px solid\"\r\n              borderColor=\"gray.400\"\r\n              bg=\"muted.100\"\r\n              placeholder=\"ราคาขาย\"\r\n            />\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <AspectRatio\r\n            ratio={4 / 3}\r\n            borderRadius=\"20px\"\r\n            bg=\"muted.200\"\r\n            overflow=\"hidden\"\r\n          >\r\n            <Box>\r\n              <ProductPictureSlider\r\n                imgPath={\r\n                  product.ProductImages &&\r\n                  product.ProductImages[selectedImg] &&\r\n                  product.ProductImages[selectedImg].imgPath\r\n                }\r\n              />\r\n              <Box\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                left=\"0\"\r\n                bg=\"gray.200\"\r\n                opacity=\"50%\"\r\n                pl={1}\r\n                pr={3}\r\n                _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\r\n                // onClick={() => setSelectedImg(selectedImg - 1)}\r\n                onClick={handleBackSlider}\r\n              >\r\n                <ArrowLeftIcon />\r\n              </Box>\r\n              <Box\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                right=\"0\"\r\n                bg=\"gray.200\"\r\n                opacity=\"50%\"\r\n                pl={3}\r\n                pr={1}\r\n                _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\r\n                // onClick={() => setSelectedImg(selectedImg + 1)}\r\n                onClick={handleNextSlider}\r\n              >\r\n                <ArrowRightIcon />\r\n              </Box>\r\n              <Box\r\n                position=\"absolute\"\r\n                top=\"0\"\r\n                right=\"0\"\r\n                bg=\"gray.200\"\r\n                p={2}\r\n                opacity=\"50%\"\r\n                _hover={{ cursor: 'pointer', bg: 'gray.300', opacity: '100%' }}\r\n                onClick={handleDeleteImage}\r\n              >\r\n                <Icon as={BsTrash} />\r\n              </Box>\r\n            </Box>\r\n          </AspectRatio>\r\n          <Flex justify=\"center\" m={2}>\r\n            {product.ProductImages &&\r\n              product.ProductImages.map((image, index) =>\r\n                selectedImg === index ? (\r\n                  <Icon as={BsCircleFill} key={index} mx={0.5} />\r\n                ) : (\r\n                  <Icon\r\n                    as={GiCircle}\r\n                    key={index}\r\n                    mx={0.5}\r\n                    _hover={{ cursor: 'pointer' }}\r\n                    onClick={() => setSelectedImg(index)}\r\n                  />\r\n                )\r\n              )}\r\n          </Flex>\r\n          <FormControl my={2}>\r\n            <FormLabel>อัพโหลดรูปภาพ</FormLabel>\r\n            <Flex align=\"baseline\">\r\n              <Input\r\n                onChange={(e) => setFile(e.target.files)}\r\n                //   {...register('picture')}\r\n                type=\"file\"\r\n                size=\"sm\"\r\n                border=\"1px solid\"\r\n                borderColor=\"gray.400\"\r\n                bg=\"muted.100\"\r\n                mr={2}\r\n              />\r\n              <Button\r\n                mx={2}\r\n                size=\"sm\"\r\n                bg=\"orange.100\"\r\n                _hover={{ bg: 'orange.200' }}\r\n                onClick={handleUpload}\r\n              >\r\n                อัพโหลด\r\n              </Button>\r\n            </Flex>\r\n            <FormErrorIcon />\r\n            <FormErrorMessage></FormErrorMessage>\r\n          </FormControl>\r\n          <Flex justify=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              bg=\"blueMain.100\"\r\n              _hover={{ bg: 'blueMain.200' }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Flex>\r\n        </form>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AdminEditProduct\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Img,\r\n  Spacer,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Tfoot,\r\n  Th,\r\n  Thead,\r\n  Tr\r\n} from '@chakra-ui/react'\r\nimport axios from '../config/axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../component/layout/Header'\r\n\r\nfunction AdminManageSingleOrder() {\r\n  const params = useParams()\r\n  const [order, setOrder] = useState({})\r\n  const fetchOrder = async () => {\r\n    const res = await axios.get('/order/' + params.id)\r\n    setOrder(res.data.order)\r\n    console.log(res.data.order)\r\n  }\r\n  useEffect(() => {\r\n    fetchOrder()\r\n  }, [])\r\n\r\n  const handleChangeStatus = async (status) => {\r\n    try {\r\n      await axios.put('/order/' + params.id, {\r\n        status\r\n      })\r\n      fetchOrder()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Flex justify=\"center\" align=\"center\" direction=\"column\">\r\n        <Container maxW=\"container.lg\" p={2}>\r\n          <Text as=\"h2\" fontSize=\"xl\" fontWeight=\"semibold\">\r\n            จัดการคำสั่งซื้อ\r\n          </Text>\r\n        </Container>\r\n        <Container maxW=\"container.md\" fontSize=\"sm\">\r\n          <Flex>\r\n            <Box w=\"50%\">\r\n              <Text>ชื่อ: {order.firstName + ' ' + order.surName}</Text>\r\n              <Text>ที่อยู่: {order.address}</Text>\r\n            </Box>\r\n            <Spacer />\r\n            <Box w=\"40%\">\r\n              <Text>เลขที่: {order.id}</Text>\r\n              <Text>วันที่: {order.date && order.date.slice(0, 10)}</Text>\r\n              <Text>\r\n                สถานะ:{' '}\r\n                {order.status === 'WAITING_PAYMENT_APPROVAL'\r\n                  ? 'รอตรวจสอบการจ่ายเงิน'\r\n                  : order.status === 'ORDERED'\r\n                  ? 'ยังไม่ได้ชำระเงิน'\r\n                  : order.status === 'CANCELLED'\r\n                  ? 'ยกเลิก'\r\n                  : order.status === 'PAYMENT_RECEIVED'\r\n                  ? 'ได้รับเงินแล้วรอจัดส่ง'\r\n                  : order.status === 'SHIPED'\r\n                  ? 'จัดส่งแล้ว'\r\n                  : 'สำเร็จ'}\r\n              </Text>\r\n            </Box>\r\n          </Flex>\r\n          <Table size=\"sm\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ลำดับที่</Th>\r\n                <Th>ชื่อสินค้า</Th>\r\n                <Th isNumeric>จำนวน</Th>\r\n                <Th isNumeric>ราคาต่อหน่วย</Th>\r\n                <Th isNumeric>รวม</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {order.TransactionItems &&\r\n                order.TransactionItems.map((item, index) => (\r\n                  <Tr key={index}>\r\n                    <Td>{index + 1}</Td>\r\n                    <Td>{item.Product.name}</Td>\r\n                    <Td isNumeric>{+item.quantity}</Td>\r\n                    <Td isNumeric>{+item.unitPrice}</Td>\r\n                    <Td isNumeric>{item.unitPrice * item.quantity}</Td>\r\n                  </Tr>\r\n                ))}\r\n            </Tbody>\r\n            <Tfoot>\r\n              <Tr>\r\n                <Th></Th>\r\n                <Th></Th>\r\n                <Th></Th>\r\n                <Th isNumeric>รวม</Th>\r\n                <Th isNumeric>\r\n                  {order.TransactionItems &&\r\n                    order.TransactionItems.reduce(\r\n                      (acc, item) => (acc += item.unitPrice * item.quantity),\r\n                      0\r\n                    )}\r\n                </Th>\r\n              </Tr>\r\n            </Tfoot>\r\n          </Table>\r\n          <Flex align=\"center\" direction=\"column\">\r\n            <Img src={order.slipPath} m={2} />\r\n            {(order.status === 'WAITING_PAYMENT_APPROVAL' ||\r\n              order.status === 'ORDERED') && (\r\n              <Button\r\n                size=\"sm\"\r\n                bg=\"orangeMain.100\"\r\n                _hover={{ bg: 'orangeMain.200' }}\r\n                m={2}\r\n                onClick={() => handleChangeStatus('PAYMENT_RECEIVED')}\r\n              >\r\n                ยืนยันการรับชำระเงิน\r\n              </Button>\r\n            )}\r\n            {order.status === 'PAYMENT_RECEIVED' && (\r\n              <Button\r\n                size=\"sm\"\r\n                bg=\"orangeMain.100\"\r\n                _hover={{ bg: 'orangeMain.200' }}\r\n                m={2}\r\n                onClick={() => handleChangeStatus('SHIPED')}\r\n              >\r\n                จัดส่งสินค้า\r\n              </Button>\r\n            )}\r\n            {order.status === 'SHIPED' && (\r\n              <Button\r\n                size=\"sm\"\r\n                bg=\"orangeMain.100\"\r\n                _hover={{ bg: 'orangeMain.200' }}\r\n                m={2}\r\n                onClick={() => handleChangeStatus('COMPLETED')}\r\n              >\r\n                สำเร็จ\r\n              </Button>\r\n            )}\r\n\r\n            {order.status === 'CANCELLED' && (\r\n              <Button\r\n                size=\"sm\"\r\n                bg=\"red.300\"\r\n                _hover={{ bg: 'red.400' }}\r\n                m={2}\r\n                onClick={() => handleChangeStatus('ORDERED')}\r\n              >\r\n                Activate\r\n              </Button>\r\n            )}\r\n\r\n            {order.status !== 'CANCELLED' && (\r\n              <Button\r\n                size=\"sm\"\r\n                bg=\"red.300\"\r\n                _hover={{ bg: 'red.400' }}\r\n                m={2}\r\n                onClick={() => handleChangeStatus('CANCELLED')}\r\n              >\r\n                ยกเลิก\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </Container>\r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminManageSingleOrder\r\n","import './App.css'\r\nimport HomePage from './pages/HomePage'\r\nimport ProductPage from './pages/ProductPage'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport DesignSystemPage from './pages/DesignSystemPage'\r\nimport LogInPage from './pages/LogInPage'\r\nimport RegisterPage from './pages/RegisterPage'\r\nimport CartPage from './pages/CartPage'\r\nimport SingleProductPage from './pages/SingleProductPage'\r\nimport ProfilePage from './pages/ProfilePage'\r\nimport SingleOrderPage from './pages/SingleOrderPage'\r\nimport AdminCreateProduct from './pages/AdminCreateProduct'\r\nimport AdminManageProduct from './pages/AdminManageProduct'\r\nimport AdminManageStock from './pages/AdminManageStock'\r\nimport AdminManageOrder from './pages/AdminManageOrder'\r\nimport { useContext } from 'react'\r\nimport { ProfileContext } from './contexts/ProfileContextProvider'\r\nimport AdminEditProduct from './pages/AdminEditProduct'\r\nimport AdminManageSingleOrder from './pages/AdminManageSingleOrder'\r\n\r\nfunction App() {\r\n  const { profile } = useContext(ProfileContext)\r\n  const adminRoute = [\r\n    { path: '/admin/create/product', component: AdminCreateProduct },\r\n    { path: '/admin/manage/product', component: AdminManageProduct },\r\n    { path: '/admin/manage/product/:id', component: AdminEditProduct },\r\n    { path: '/admin/manage/stock', component: AdminManageStock },\r\n    { path: '/admin/manage/order', component: AdminManageOrder },\r\n    { path: '/admin/manage/order/:id', component: AdminManageSingleOrder }\r\n  ]\r\n  const privateRoute = [{ path: '/profile', component: ProfilePage }]\r\n  const publicRoute = [\r\n    { path: '/register', component: RegisterPage },\r\n    { path: '/login', component: LogInPage }\r\n  ]\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/product\" component={ProductPage} />\r\n        <Route exact path=\"/design-system\" component={DesignSystemPage} />\r\n        <Route exact path=\"/cart\" component={CartPage} />\r\n        <Route exact path=\"/product/:id\" component={SingleProductPage} />\r\n        <Route exact path=\"/order/:id\" component={SingleOrderPage} />\r\n        {!profile.id &&\r\n          publicRoute.map((item, index) => (\r\n            <Route\r\n              exact\r\n              path={item.path}\r\n              component={item.component}\r\n              key={index}\r\n            />\r\n          ))}\r\n        {profile.id &&\r\n          privateRoute.map((item, index) => (\r\n            <Route\r\n              exact\r\n              path={item.path}\r\n              component={item.component}\r\n              key={index}\r\n            />\r\n          ))}\r\n        {profile &&\r\n          profile.userType === 'ADMIN' &&\r\n          adminRoute.map((item, index) => (\r\n            <Route\r\n              exact\r\n              path={item.path}\r\n              component={item.component}\r\n              key={index}\r\n            />\r\n          ))}\r\n        {/* <Redirect to=\"/\" /> */}\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { extendTheme } from '@chakra-ui/react'\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      'html, body': {\r\n        padding: 0,\r\n        margin: 0,\r\n        fontSize: '16px',\r\n        color: 'text'\r\n      },\r\n      '*': {\r\n        boxSizing: 'border-box'\r\n      }\r\n    }\r\n  },\r\n  colors: {\r\n    primary: {\r\n      200: '#424642',\r\n      100: '#536162'\r\n    },\r\n    orangeMain: {\r\n      100: '#fcd553',\r\n      200: '#ebae34'\r\n    },\r\n    blueMain: {\r\n      100: '#11a3d4',\r\n      200: '#046bba'\r\n    },\r\n    muted: {\r\n      300: '#F3F4ED',\r\n      200: '#FCFCFC',\r\n      100: '#FFFFFF'\r\n    }\r\n  },\r\n  fonts: {\r\n    heading: 'Chakra Petch',\r\n    body: 'Chakra Petch'\r\n  }\r\n})\r\n","import { Global } from '@emotion/react'\r\n\r\nconst Fonts = () => (\r\n  <Global\r\n    styles={`/* thai */\r\n    @font-face {\r\n      font-family: 'Chakra Petch';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/chakrapetch/v4/cIf6MapbsEk7TDLdtEz1BwkWi6pgeL4.woff2) format('woff2');\r\n      unicode-range: U+0E01-0E5B, U+200C-200D, U+25CC;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Chakra Petch';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/chakrapetch/v4/cIf6MapbsEk7TDLdtEz1BwkWkKpgeL4.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Chakra Petch';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/chakrapetch/v4/cIf6MapbsEk7TDLdtEz1BwkWkapgeL4.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Chakra Petch';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/chakrapetch/v4/cIf6MapbsEk7TDLdtEz1BwkWn6pg.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }\r\n    /* thai */\r\n    @font-face {\r\n      font-family: 'Prompt';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/prompt/v5/-W__XJnvUD7dzB2KdNodVkI.woff2) format('woff2');\r\n      unicode-range: U+0E01-0E5B, U+200C-200D, U+25CC;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Prompt';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/prompt/v5/-W__XJnvUD7dzB2Kb9odVkI.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Prompt';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/prompt/v5/-W__XJnvUD7dzB2KbtodVkI.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Prompt';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/prompt/v5/-W__XJnvUD7dzB2KYNod.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }`}\r\n  />\r\n)\r\n\r\nexport default Fonts\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { theme } from './styles/theme'\r\nimport Fonts from './styles/Fonts'\r\nimport AuthContextProvider from './contexts/AuthContextProvider'\r\nimport CartContextProvider from './contexts/CartContextProvider'\r\nimport ProfileContextProvider from './contexts/ProfileContextProvider'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <ProfileContextProvider>\r\n        <CartContextProvider>\r\n          <BrowserRouter>\r\n            <ChakraProvider theme={theme}>\r\n              <Fonts />\r\n              <App />\r\n            </ChakraProvider>\r\n          </BrowserRouter>\r\n        </CartContextProvider>\r\n      </ProfileContextProvider>\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}